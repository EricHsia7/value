{"version":3,"file":"8d57c3d73fb08fb0bcdb.js","mappings":"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","sources":["webpack://value/./src/lib/component/delimeters.ts","webpack://value/./src/lib/component/component.ts","webpack://value/./src/lib/component/evaluate.ts","webpack://value/./src/lib/storage/index.ts","webpack://value/./src/lib/variable/index.ts","webpack://value/./src/lib/symbol/index.ts","webpack://value/./src/lib/selector/index.ts","webpack://value/./src/lib/version/index.ts","webpack://value/./src/lib/tools/boolean-to-string.ts","webpack://value/./src/interface/icons/index.ts","webpack://value/./src/interface/pages/editor/index.ts","webpack://value/./src/interface/pages/home/symbols/index.ts","webpack://value/./src/interface/pages/home/index.ts","webpack://value/./src/interface/pages/search/index.ts","webpack://value/./src/interface/pages/settings/index.ts","webpack://value/./src/interface/pages/index.ts","webpack://value/./src/interface/tabs-bar/menu.ts","webpack://value/./src/interface/tabs-bar/tabs.ts","webpack://value/./src/index.ts","webpack://value/./src/lib/tools/remove-from-array.ts","webpack://value/./src/lib/tools/generate-identifier.ts"],"sourcesContent":["export const delimeters = {\n  add: [','],\n  substract: [','],\n  multiply: [','],\n  divide: [','],\n  mod: [','],\n  sum: [','],\n  sqrt: [],\n  pow: [','],\n  sin: [],\n  cos: [],\n  tan: [],\n  log: [','],\n  floor: [],\n  ceil: [],\n  round: [],\n  abs: [],\n  pi: [],\n  var: [','],\n  now: [],\n  dateString: [','],\n  template: [','],\n  default: [',']\n};\n\nexport const primaryDelimiters = {\n  add: ',',\n  substract: ',',\n  multiply: ',',\n  divide: ',',\n  mod: ',',\n  sum: ',',\n  sqrt: ' ',\n  pow: ',',\n  sin: ' ',\n  cos: ' ',\n  tan: ' ',\n  log: ',',\n  floor: ' ',\n  ceil: ' ',\n  round: ' ',\n  abs: ' ',\n  pi: ' ',\n  var: ',',\n  now: ' ',\n  dateString: ',',\n  template: ',',\n  default: ','\n};\n","import { isTopLevelModel } from '../tools/is-top-level-model';\nimport { splitByTopLevelDelimiter } from '../tools/split-by-top-level-delimiter';\nimport { stripTopLevelModel } from '../tools/strip-top-level-model';\nimport { delimeters, primaryDelimiters } from './delimeters';\n\nexport interface ModelComponent<T extends string> {\n  type: 'model';\n  model: T;\n  components: Array<Component>;\n}\n\nexport interface NumberComponent {\n  type: 'number';\n  number: number;\n  unit: string | '';\n}\n\nexport interface StringComponent {\n  type: 'string';\n  string: string;\n}\n\nexport type Component = NumberComponent | StringComponent | ModelComponent<string>;\n\nexport type ParsingFailed = undefined;\n\nexport function parseNumber(value: string): NumberComponent | ParsingFailed {\n  if (/^[-+]?[0-9]+$/.test(value)) {\n    // integer\n    return {\n      type: 'number',\n      number: parseInt(value, 10),\n      unit: ''\n    };\n  }\n\n  if (/^[-+]?[0-9]*\\.?[0-9]+$/.test(value)) {\n    // float\n    return {\n      type: 'number',\n      number: parseFloat(value),\n      unit: ''\n    };\n  }\n\n  const unitedIntegerMatch = value.match(/^([-+]?[0-9]+)([a-z%]+)$/i);\n  if (unitedIntegerMatch) {\n    // integer with unit\n    return {\n      type: 'number',\n      number: parseInt(unitedIntegerMatch[1], 10),\n      unit: unitedIntegerMatch[2].trim()\n    };\n  }\n\n  const unitedFloatMatch = value.match(/^([-+]?[0-9]*\\.?[0-9]+)([a-z%]+)$/i);\n  if (unitedFloatMatch) {\n    // float with unit\n    return {\n      type: 'number',\n      number: parseFloat(unitedFloatMatch[1]),\n      unit: unitedFloatMatch[2].trim()\n    };\n  }\n\n  return undefined;\n}\n\nexport function parseModel(value: string): ModelComponent<string> | ParsingFailed {\n  if (isTopLevelModel(value)) {\n    const strippedModel = stripTopLevelModel(value);\n    const legalDelimiters = delimeters[strippedModel.model] || delimeters['default'];\n    const array = splitByTopLevelDelimiter(strippedModel.result, legalDelimiters);\n\n    const parsedComponents = array.result.map((a) => parseComponent(a)).filter((b) => b !== undefined);\n\n    return {\n      type: 'model',\n      model: strippedModel.model,\n      components: parsedComponents\n    };\n  }\n\n  return undefined;\n}\n\nexport function parseComponent(value: string): Component | ParsingFailed {\n  const parsedNumberComponent = parseNumber(value);\n  if (parsedNumberComponent !== undefined) {\n    return parsedNumberComponent;\n  }\n\n  const parsedModelComponent = parseModel(value);\n  if (parsedModelComponent !== undefined) {\n    return parsedModelComponent;\n  }\n\n  if (value !== '') {\n    return {\n      type: 'string',\n      string: value\n    };\n  }\n\n  return undefined;\n}\n\nexport function stringifyComponent(component: Component | ParsingFailed): string {\n  if (component === undefined) return '';\n\n  if (component.type === 'number') {\n    return `${component.number}${component.unit}`;\n  }\n\n  if (component.type === 'string') {\n    return component.string;\n  }\n\n  if (component.type === 'model') {\n    // Join subcomponents with a delimiter (or use a white space by default)\n    const delimiter = primaryDelimiters[component.model] || primaryDelimiters['default'];\n    const inner = component.components.map((e) => stringifyComponent(e)).join(delimiter);\n    return `${component.model}(${inner})`;\n  }\n\n  return '';\n}\n","import { Variable } from '../variable/index';\nimport { Component, NumberComponent, StringComponent, stringifyComponent } from './component';\n\nexport function evaluateComponent(component: Component, variableMap: { [VariableName: Variable['name']]: Component } = {}): Component | undefined {\n  if (component.type === 'string') {\n    return component;\n  } else if (component.type === 'number') {\n    switch (component.unit) {\n      // percentage\n      case '%': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number / 100,\n          unit: ''\n        };\n        return result;\n      }\n\n      // angle\n      case 'deg': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: (component.number * Math.PI) / 180,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'rad': {\n        return component;\n      }\n\n      // time\n      case 'ms': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'sec': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number * 1000,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'min': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number * 60 * 1000,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'hr': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number * 60 * 60 * 1000,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'day': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number * 24 * 60 * 60 * 1000,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'week': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number * 7 * 24 * 60 * 60 * 1000,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'rad': {\n        return component;\n      }\n\n      default:\n        return component;\n    }\n  } else if (component.type === 'model') {\n    for (let i = component.components.length - 1; i >= 0; i--) {\n      const subComponent = component.components[i];\n      const evaluated = evaluateComponent(subComponent, variableMap);\n      if (evaluated !== undefined) {\n        component.components.splice(i, 1, evaluated);\n      } else {\n        component.components.splice(i, 1); // TODO: Throw an error\n      }\n    }\n    switch (component.model) {\n      case 'add': {\n        const [a, b] = component.components;\n        if (a.type !== 'number' || b.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: a.number + b.number,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'substract': {\n        const [a, b] = component.components;\n        if (a.type !== 'number' || b.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: a.number - b.number,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'multiply': {\n        const [a, b] = component.components;\n        if (a.type !== 'number' || b.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: a.number * b.number,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'divide': {\n        const [a, b] = component.components;\n        if (a.type !== 'number' || b.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: a.number / b.number,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'mod': {\n        const [a, b] = component.components;\n        if (a.type !== 'number' || b.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: a.number % b.number,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'sum': {\n        if (component.components.some((e) => e.type !== 'number')) return undefined;\n\n        let total = 0;\n        for (let i = component.components.length - 1; i >= 0; i--) {\n          const subComponent = component.components[i] as NumberComponent;\n          total += subComponent.number;\n        }\n        const result: NumberComponent = {\n          type: 'number',\n          number: total,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'sqrt': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.sqrt(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'pow': {\n        const [a, b] = component.components;\n        if (a.type !== 'number' || b.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.pow(a.number, b.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'sin': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.sin(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'cos': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.cos(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'tan': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.tan(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'log': {\n        const [a, b] = component.components;\n        if (a.type !== 'number') return undefined;\n        if (b !== undefined && b.type === 'number') {\n          const result: NumberComponent = {\n            type: 'number',\n            number: Math.log(a.number) / Math.log(b.number),\n            unit: ''\n          };\n          return result;\n        } else {\n          const result: NumberComponent = {\n            type: 'number',\n            number: Math.log(a.number),\n            unit: ''\n          };\n          return result;\n        }\n      }\n\n      case 'floor': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.floor(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'ceil': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.ceil(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'round': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.round(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'abs': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.abs(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'pi': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.PI,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'var': {\n        const [name] = component.components;\n        if (name === undefined) return undefined;\n        if (name.type !== 'string') return undefined;\n        if (!variableMap.hasOwnProperty(name)) return undefined;\n        return variableMap[name];\n        break;\n      }\n\n      case 'now': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: new Date().getTime(),\n          unit: ''\n        };\n        return result;\n        break;\n      }\n\n      case 'dateString': {\n        const [miliseconds, format] = component.components;\n        if (miliseconds.type !== 'number') return undefined;\n\n        const date = new Date(miliseconds.number);\n\n        if (format !== undefined && format.type === 'string') {\n          const string = format.string\n            .replaceAll(/Y{2,}/g, date.getFullYear().toString())\n            .replaceAll(/M{2}/g, (date.getMonth() + 1).toString().padStart(2, '0'))\n            .replaceAll(/M{1}/g, (date.getMonth() + 1).toString())\n            .replaceAll(/D{2}/g, date.getDate().toString().padStart(2, '0'))\n            .replaceAll(/D{1}/g, date.getDate().toString())\n            .replaceAll(/h{2}/g, date.getHours().toString().padStart(2, '0'))\n            .replaceAll(/h{1}/g, date.getHours().toString())\n            .replaceAll(/m{2}/g, date.getMinutes().toString().padStart(2, '0'))\n            .replaceAll(/m{1}/g, date.getMinutes().toString())\n            .replaceAll(/s{3}/g, date.getMilliseconds().toString())\n            .replaceAll(/s{2}/g, date.getSeconds().toString().padStart(2, '0'))\n            .replaceAll(/s{1}/g, date.getSeconds().toString());\n\n          const result: StringComponent = {\n            type: 'string',\n            string: string\n          };\n          return result;\n        }\n      }\n\n      case 'template': {\n        const arr: Array<string> = [];\n        for (let i = component.components.length - 1; i >= 0; i--) {\n          const subComponent = component.components[i];\n          arr.unshift(stringifyComponent(subComponent));\n        }\n        const result: StringComponent = {\n          type: 'string',\n          string: arr.join(' ')\n        };\n        return result;\n      }\n\n      default:\n        return undefined;\n        break;\n    }\n  }\n}\n","const localforage = require('localforage');\n\nlet storage = {\n  symbolsStore: false, // 0\n  variablesStore: false, // 1\n  settingsStore: false, // 2\n  cacheStore: false // 3\n};\n\nconst stores = ['symbolsStore', 'variablesStore', 'settingsStore', 'cacheStore'];\n\nasync function dropInstance(store: number): Promise<any> {\n  const storeKey = stores[store];\n  if (storage[storeKey] === false) {\n    storage[storeKey] = await localforage.createInstance({\n      name: storeKey\n    });\n  }\n  const operation = await storage[storeKey].dropInstance();\n  return operation;\n}\n\nexport async function lfSetItem(store: number, key: string, value: any): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].setItem(key, value);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n}\n\nexport async function lfGetItem(store: number, key: string): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].getItem(key);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n}\n\nexport async function lfRemoveItem(store: number, key: string): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].removeItem(key);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n}\n\nexport async function lfListItemKeys(store: number): Promise<Array<string>> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const keys = await storage[storeKey].keys();\n    return keys;\n  } catch (err) {\n    console.error(err);\n    return [];\n  }\n}\n\nexport function getStoreKey(store: number): string {\n  return stores[store];\n}\n\nexport function getStoresLength(): number {\n  return stores.length;\n}\n\nexport async function isStoragePersistent(): Promise<boolean> {\n  // Check if site's storage has been marked as persistent\n  if (navigator.storage) {\n    if (navigator.storage.persist) {\n      const isPersisted = await navigator.storage.persisted();\n      return isPersisted;\n    }\n  }\n  return false;\n}\n\nexport async function askForPersistentStorage(): Promise<'granted' | 'denied' | 'unsupported'> {\n  // Request persistent storage for site\n  if (navigator.storage) {\n    if (navigator.storage.persist) {\n      const isPersisted = await navigator.storage.persist();\n      return isPersisted ? 'granted' : 'denied';\n    }\n  }\n  return 'unsupported';\n}\n","import { ModelComponent } from '../component/component';\nimport { lfGetItem, lfListItemKeys, lfRemoveItem, lfSetItem } from '../storage/index';\nimport { generateIdentifier } from '../tools/generate-identifier';\n\nexport interface Variable {\n  type: 'variable';\n  name: string;\n  template: ModelComponent<'template'> | undefined;\n  id: string;\n}\n\nconst Variables: {\n  [id: Variable['id']]: Variable;\n} = {};\n\nexport async function initializeVariables() {\n  const keys = await lfListItemKeys(1);\n  for (const key of keys) {\n    const thisVariableJSON = await lfGetItem(1, key);\n    if (thisVariableJSON) {\n      const thisVariableObject = JSON.parse(thisVariableJSON) as Symbol;\n      Variables[thisVariableObject.id] = thisVariableObject;\n    }\n  }\n}\n\nexport async function createVariable(): Promise<Variable['id']> {\n  const identifier = generateIdentifier();\n  const object: Variable = {\n    type: 'variable',\n    name: identifier,\n    template: undefined,\n    id: identifier\n  };\n\n  Variables[identifier] = object;\n\n  await lfSetItem(1, identifier, JSON.stringify(object));\n\n  return identifier;\n}\n\nexport function hasVariable(VariableID: Variable['id']): boolean {\n  return Variables.hasOwnProperty(VariableID);\n}\n\nexport function getVariable(VariableID: Variable['id']): Variable | undefined {\n  if (hasVariable(VariableID)) {\n    return Variables[VariableID];\n  } else {\n    return undefined;\n  }\n}\n\nexport async function deleteVariable(VariableID: Variable['id']): Promise<boolean> {\n  if (hasVariable(VariableID)) {\n    delete Variables[VariableID];\n    await lfRemoveItem(1, VariableID);\n    return true;\n  } else {\n    return false;\n  }\n}\n","import { MaterialSymbols } from '../../interface/icons/material-symbols-type';\nimport { Component, stringifyComponent } from '../component/component';\nimport { evaluateComponent } from '../component/evaluate';\nimport { lfGetItem, lfListItemKeys, lfRemoveItem, lfSetItem } from '../storage/index';\nimport { generateIdentifier } from '../tools/generate-identifier';\nimport { deleteVariable, getVariable, hasVariable, Variable } from '../variable/index';\n\nexport interface Symbol {\n  type: 'symbol';\n  name: string;\n  description: string;\n  icon: MaterialSymbols;\n  variables: Array<Variable['id']>;\n  output: Variable['id'];\n  id: string;\n}\n\nexport interface EvaluatedSymbol {\n  type: 'evaluated-symbol';\n  name: string;\n  description: string;\n  icon: MaterialSymbols;\n  value: string;\n  id: string;\n}\n\nconst Symbols: {\n  [id: Symbol['id']]: Symbol;\n} = {};\n\nexport async function initializeSymbols() {\n  const keys = await lfListItemKeys(0);\n  for (const key of keys) {\n    const thisSymbolJSON = await lfGetItem(0, key);\n    if (thisSymbolJSON) {\n      const thisSymbolObject = JSON.parse(thisSymbolJSON) as Symbol;\n      Symbols[thisSymbolObject.id] = thisSymbolObject;\n    }\n  }\n}\n\nexport async function createSymbol(name: Symbol['name'] = 'Unnamed Symbol'): Promise<Symbol['id']> {\n  const SymbolID = generateIdentifier();\n  const object: Symbol = {\n    type: 'symbol',\n    name: name,\n    description: '',\n    icon: 'glyphs',\n    variables: [],\n    output: '',\n    id: SymbolID\n  };\n\n  Symbols[SymbolID] = object;\n\n  await lfSetItem(0, SymbolID, JSON.stringify(object));\n\n  return SymbolID;\n}\n\nexport function hasSymbol(SymbolID: Symbol['id']): boolean {\n  return Symbols.hasOwnProperty(SymbolID);\n}\n\nexport function getSymbol(SymbolID: Symbol['id']): Symbol | undefined {\n  if (hasSymbol(SymbolID)) {\n    return Symbols[SymbolID];\n  } else {\n    return undefined;\n  }\n}\n\nexport async function deleteSymbol(SymbolID: Symbol['id']): Promise<boolean> {\n  if (hasSymbol(SymbolID)) {\n    delete Symbols[SymbolID];\n    await lfRemoveItem(0, SymbolID);\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport async function setSymbolName(SymbolID: Symbol['id'], name: Symbol['name']): Promise<boolean> {\n  if (!hasSymbol(SymbolID)) return false;\n  const thisSymbolObject = Symbols[SymbolID];\n  thisSymbolObject.name = name;\n  Symbols[SymbolID] = thisSymbolObject;\n  await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n  return true;\n}\n\nexport async function setSymbolDescription(SymbolID: Symbol['id'], description: Symbol['description']): Promise<boolean> {\n  if (!hasSymbol(SymbolID)) return false;\n  const thisSymbolObject = Symbols[SymbolID];\n  thisSymbolObject.description = description;\n  Symbols[SymbolID] = thisSymbolObject;\n  await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n  return true;\n}\n\nexport async function setSymbolIcon(SymbolID: Symbol['id'], icon: Symbol['icon']): Promise<boolean> {\n  if (!hasSymbol(SymbolID)) return false;\n  // TODO: validate icon\n  const thisSymbolObject = Symbols[SymbolID];\n  thisSymbolObject.icon = icon;\n  Symbols[SymbolID] = thisSymbolObject;\n  await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n  return true;\n}\n\nexport async function setSymbolOutput(SymbolID: Symbol['id'], output: Symbol['output']): Promise<boolean> {\n  if (!hasSymbol(SymbolID)) return false;\n  const thisSymbolObject = Symbols[SymbolID];\n  thisSymbolObject.output = output;\n  Symbols[SymbolID] = thisSymbolObject;\n  await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n  return true;\n}\n\nexport async function addVariableToSymbol(SymbolID: Symbol['id'], VariableID: Variable['id']): Promise<number> {\n  if (!hasSymbol(SymbolID)) return -1;\n  if (!hasVariable(VariableID)) return -1;\n  const thisSymbolObject = Symbols[SymbolID];\n  const existingIndex = thisSymbolObject.variables.indexOf(VariableID);\n  if (existingIndex === -1) {\n    thisSymbolObject.variables.push(VariableID);\n    Symbols[SymbolID] = thisSymbolObject;\n    await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n    return thisSymbolObject.variables.length - 1;\n  } else {\n    return existingIndex;\n  }\n}\n\nexport async function removeVariableFromSymbol(SymbolID: Symbol['id'], VariableID: Variable['id']): Promise<boolean> {\n  if (!hasSymbol(SymbolID)) return false;\n  if (!hasVariable(VariableID)) return false;\n  const thisSymbolObject = Symbols[SymbolID];\n  const existingIndex = thisSymbolObject.variables.indexOf(VariableID);\n  if (existingIndex === -1) {\n    return false;\n  } else {\n    thisSymbolObject.variables.splice(existingIndex, 1);\n    Symbols[SymbolID] = thisSymbolObject;\n    await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n    await deleteVariable(VariableID);\n    return true;\n  }\n}\n\nexport async function moveVariableInSymbol(SymbolID: Symbol['id'], VariableID: Variable['id'], offset: number): Promise<boolean> {\n  if (!hasSymbol(SymbolID)) return false;\n  if (!hasVariable(VariableID)) return false;\n  const thisSymbolObject = Symbols[SymbolID];\n  const existingIndex = thisSymbolObject.variables.indexOf(VariableID);\n  if (existingIndex === -1) {\n    return false;\n  } else {\n    thisSymbolObject.variables.splice(existingIndex, 1);\n    thisSymbolObject.variables.splice(existingIndex + offset, 0, VariableID);\n    Symbols[SymbolID] = thisSymbolObject;\n    await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n    return true;\n  }\n}\n\nexport async function evaluateSymbol(thisSymbol: Symbol): EvaluatedSymbol {\n  const fallback: EvaluatedSymbol = {\n    type: 'evaluated-symbol',\n    name: thisSymbol.name,\n    description: thisSymbol.description,\n    icon: thisSymbol.icon,\n    value: 'undefined',\n    id: thisSymbol.id\n  };\n\n  const outputVariableID = thisSymbol.output;\n  const outputVariable = getVariable(outputVariableID);\n  if (outputVariable === undefined) return fallback;\n\n  const evaluatedVariables: { [VariableName: Variable['name']]: Component } = {};\n  const variableIDs = thisSymbol.variables;\n  for (const variableID of variableIDs) {\n    const thisVariable = getVariable(variableID);\n    if (thisVariable === undefined) continue;\n    if (thisVariable?.template === undefined) continue;\n    const evaluatedVariableValue = evaluateComponent(thisVariable.template, evaluatedVariables);\n    if (evaluatedVariableValue === undefined) continue;\n    evaluatedVariables[thisVariable.name] = evaluatedVariableValue;\n  }\n\n  if (!evaluatedVariables.hasOwnProperty(outputVariable.name)) return fallback;\n\n  return {\n    type: 'evaluated-symbol',\n    name: thisSymbol.name,\n    description: thisSymbol.description,\n    icon: thisSymbol.icon,\n    value: stringifyComponent(evaluatedVariables[outputVariable.name]),\n    id: thisSymbol.id\n  };\n}\n\nexport function listSymbols(): Array<Symbol> {\n  const result: Array<Symbol> = [];\n\n  for (const key in Symbols) {\n    const thisSymbol = Symbols[key];\n    result.push({\n      type: 'symbol',\n      name: thisSymbol.name,\n      description: thisSymbol.description,\n      variables: thisSymbol.variables,\n      output: thisSymbol.output,\n      id: thisSymbol.id\n    });\n  }\n\n  return result;\n}\n\nexport function listEvaluatedSymbols(): Array<EvaluatedSymbol> {\n  const result: Array<EvaluatedSymbol> = [];\n  for (const key in Symbols) {\n    const thisSymbol = Symbols[key];\n    result.push(evaluateSymbol(thisSymbol));\n  }\n\n  return result;\n}\n","export function documentQuerySelector(selectorExpression: string): HTMLElement {\n  return document.querySelector(selectorExpression);\n}\n\nexport function documentQuerySelectorAll(selectorExpression: string): NodeListOf<HTMLElement> {\n  return document.querySelectorAll(selectorExpression);\n}\n\nexport function elementQuerySelector(element: HTMLElement, selectorExpression: string): HTMLElement {\n  return element.querySelector(selectorExpression);\n}\n\nexport function elementQuerySelectorAll(element: HTMLElement, selectorExpression: string): NodeListOf<HTMLElement> {\n  return element.querySelectorAll(selectorExpression);\n}\n\nexport function getElementsBelow(referenceElement: HTMLElement, className: string): Array<HTMLElement> {\n  const elements = [];\n  let sibling = referenceElement.nextElementSibling;\n\n  while (sibling) {\n    if (sibling.classList.contains(className)) {\n      elements.push(sibling);\n    }\n    sibling = sibling.nextElementSibling;\n  }\n\n  return elements;\n}","import { documentQuerySelector } from '../selector/index';\n\nfunction refreshPageWithTimeStamp(id: string, enforce: boolean = false): void {\n  // Get the URLSearchParams object from the current URL\n  const searchParams = new URLSearchParams(window.location.search);\n  // Set the 'timestamp' query parameter to the current timestamp\n  searchParams.set('v', id);\n  // Construct the new URL with updated query parameters\n  const newUrl = window.location.pathname + '?' + searchParams.toString();\n  if (enforce) {\n    // Redirect to the new URL\n    window.location.replace(newUrl);\n  } else {\n    history.replaceState(null, '', newUrl);\n  }\n}\n\ninterface AppVersion {\n  build: number;\n  hash: string;\n  full_hash: string;\n  branch_name: string; // branch name of the code base\n  timestamp: string; // timestamp in ISO fromat\n}\n\nasync function getAppVersion(): Promise<AppVersion | false> {\n  try {\n    const response = await fetch(`./version.json?_=${new Date().getTime()}`, {\n      cache: 'no-store'\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('There was a problem with the fetch operation:', error);\n    return false;\n  }\n}\n\nexport function getHTMLVersionHash(): string {\n  return documentQuerySelector('head meta[name=\"version-hash\"]').getAttribute('content');\n}\n\nexport function getHTMLVersionFullHash(): string {\n  return documentQuerySelector('head meta[name=\"version-full-hash\"]').getAttribute('content');\n}\n\nexport function getHTMLVersionBranchName(): string {\n  return documentQuerySelector('head meta[name=\"version-branch-name\"]').getAttribute('content');\n}\n\nexport function getCommitURLOfCurrentVersion(): string {\n  const currentFullHash = getHTMLVersionFullHash();\n  return `https://github.com/EricHsia7/value/commit/${currentFullHash}`;\n}\n\nexport function getHTMLVersionTimeStamp(): string {\n  return documentQuerySelector('head meta[name=\"version-time-stamp\"]').getAttribute('content');\n}\n\ntype AppVersionStatus = 'fetchError' | 'unknownError' | 'refreshing' | 'ok';\n\nexport async function checkAppVersion(): Promise<AppVersionStatus> {\n  const appVersion = await getAppVersion();\n  if (typeof appVersion === 'boolean') {\n    if (appVersion === false) {\n      return 'fetchError';\n    } else {\n      return 'unknownError';\n    }\n  } else {\n    if (getHTMLVersionHash() !== appVersion.hash) {\n      refreshPageWithTimeStamp(appVersion.hash, true);\n      return 'refreshing';\n    } else {\n      refreshPageWithTimeStamp(appVersion.hash, false);\n      return 'ok';\n    }\n  }\n}\n","export function booleanToString(value: Boolean): 'true' | 'false' {\n  if (value === true) {\n    return 'true';\n  } else {\n    return 'false';\n  }\n}\n","import { MaterialSymbols } from './material-symbols-type';\n\nexport function getIconHTML(identifier: MaterialSymbols): string {\n  return /*html*/ `<span class=\"css_material_symbols_rounded\">${identifier}</span>`;\n}\n","import { documentQuerySelector } from '../../../lib/selector/index';\nimport { Symbol } from '../../../lib/symbol/index';\n\nconst editorPage = documentQuerySelector('.css_editor_page');\n\nexport function showEditorPage(SymbolID: Symbol['id']): void {\n  editorPage.setAttribute('displayed', 'true');\n}\n\nexport function hideEditorPage(): void {\n  editorPage.setAttribute('displayed', 'false');\n}\n","import { elementQuerySelector } from '../../../../lib/selector/index';\nimport { EvaluatedSymbol, listEvaluatedSymbols } from '../../../../lib/symbol/index';\nimport { getIconHTML } from '../../../icons/index';\nimport { HomePageBodyElement } from '../index';\n\nconst HomePageSymbolsElement = elementQuerySelector(HomePageBodyElement, '.css_home_page_symbols');\n\nlet previousEvaluatedSymbolsList: Array<EvaluatedSymbol> = [];\n\nfunction generateSymbolElement(): HTMLElement {\n  const newSymbolElement = document.createElement('div');\n  newSymbolElement.classList.add('css_home_page_symbol');\n\n  const newIconElement = document.createElement('div');\n  newIconElement.classList.add('css_home_page_symbol_icon');\n  newSymbolElement.appendChild(newIconElement);\n\n  const newNameElement = document.createElement('div');\n  newNameElement.classList.add('css_home_page_symbol_name');\n  newSymbolElement.appendChild(newNameElement);\n\n  const newValueElement = document.createElement('div');\n  newValueElement.classList.add('css_home_page_symbol_value');\n  newSymbolElement.appendChild(newValueElement);\n\n  return newSymbolElement;\n}\n\nexport function updateHomePageSymbols(): void {\n  function updateHomePageSymbol(thisSymbolElement: HTMLElement, currentEvaluatedSymbol: EvaluatedSymbol, previousEvaluatedSymbol: EvaluatedSymbol | undefined): void {\n    function updateIcon(thisSymbolElement: HTMLElement, currentEvaluatedSymbol: EvaluatedSymbol) {\n      const iconElement = elementQuerySelector(thisSymbolElement, '.css_home_page_symbol_icon');\n      iconElement.innerHTML = getIconHTML(currentEvaluatedSymbol.icon);\n    }\n\n    function updateName(thisSymbolElement: HTMLElement, currentEvaluatedSymbol: EvaluatedSymbol) {\n      const nameElement = elementQuerySelector(thisSymbolElement, '.css_home_page_symbol_name');\n      nameElement.innerText = currentEvaluatedSymbol.name;\n    }\n\n    function updateValue(thisSymbolElement: HTMLElement, currentEvaluatedSymbol: EvaluatedSymbol) {\n      const valueElement = elementQuerySelector(thisSymbolElement, '.css_home_page_symbol_value');\n      valueElement.innerText = currentEvaluatedSymbol.value;\n    }\n\n    if (previousEvaluatedSymbol !== undefined) {\n      if (currentEvaluatedSymbol.icon !== previousEvaluatedSymbol.icon) {\n        updateIcon(thisSymbolElement, currentEvaluatedSymbol);\n      }\n      if (currentEvaluatedSymbol.name !== previousEvaluatedSymbol.name) {\n        updateName(thisSymbolElement, currentEvaluatedSymbol);\n      }\n      if (currentEvaluatedSymbol.value !== previousEvaluatedSymbol.value) {\n        updateValue(thisSymbolElement, currentEvaluatedSymbol);\n      }\n    } else {\n      updateIcon(thisSymbolElement, currentEvaluatedSymbol);\n      updateName(thisSymbolElement, currentEvaluatedSymbol);\n      updateValue(thisSymbolElement, currentEvaluatedSymbol);\n    }\n  }\n\n  const symbolElements = Array.from(elementQuerySelectorAll(HomePageSymbolsElement, '.css_home_page_symbol'));\n  const symbolElementsLength = symbolElements.length;\n  const evaluatedSymbolsList = listEvaluatedSymbols();\n  const evaluatedSymbolsListLength = evaluatedSymbolsList.length;\n  if (evaluatedSymbolsListLength >= symbolElementsLength) {\n    const fragment = new DocumentFragment();\n    for (let i = symbolElementsLength; i < evaluatedSymbolsListLength; i++) {\n      const newSymbolElement = generateSymbolElement();\n      fragment.appendChild(newSymbolElement);\n      symbolElements.push(newSymbolElement);\n    }\n    HomePageSymbolsElement.append(fragment);\n  } else {\n    for (let j = symbolElementsLength - 1; j >= evaluatedSymbolsListLength; j--) {\n      symbolElements[j].remove();\n    }\n  }\n\n  for (let k = 0; k < evaluatedSymbolsListLength; k++) {\n    const previousEvaluatedSymbol = previousEvaluatedSymbolsList[k];\n    const currentEvaluatedSymbol = evaluatedSymbolsList[k];\n    const thisSymbolElement = symbolElements[k];\n    updateHomePageSymbol(thisSymbolElement, currentEvaluatedSymbol, previousEvaluatedSymbol);\n  }\n\n  previousEvaluatedSymbolsList = evaluatedSymbolsList;\n}\n","import { documentQuerySelector, elementQuerySelector } from '../../../lib/selector/index';\nimport { updateHomePageSymbols } from './symbols/index';\n\nexport const HomePage = documentQuerySelector('.css_home_page');\nexport const HomePageBodyElement = elementQuerySelector(HomePage, '.css_home_page_body');\n\nfunction updateHomePage(): void {\n  updateHomePageSymbols();\n}\n\nexport function showHomePage(): void {\n  HomePage.setAttribute('displayed', 'true');\n  updateHomePage();\n}\n\nexport function hideHomePage(): void {\n  HomePage.setAttribute('displayed', 'false');\n}\n","import { documentQuerySelector } from '../../../lib/selector/index';\n\nconst searchPage = documentQuerySelector('.css_search_page');\n\nexport function showSearchPage(): void {\n  searchPage.setAttribute('displayed', 'true');\n}\n\nexport function hideSearchPage(): void {\n  searchPage.setAttribute('displayed', 'false');\n}\n","import { documentQuerySelector } from '../../../lib/selector/index';\n\nconst settingsPage = documentQuerySelector('.css_settings_page');\n\nexport function showSettingsPage(): void {\n  settingsPage.setAttribute('displayed', 'true');\n}\n\nexport function hideSettingsPage(): void {\n  settingsPage.setAttribute('displayed', 'false');\n}\n","import { TabsBarMenuItemArray } from '../tabs-bar/menu';\nimport { openTab, registerTab } from '../tabs-bar/tabs';\nimport { hideEditorPage, showEditorPage } from './editor/index';\nimport { hideHomePage, showHomePage } from './home/index';\nimport { hideSearchPage, showSearchPage } from './search/index';\nimport { hideSettingsPage, showSettingsPage } from './settings/index';\n\nexport type HomePage = 'home';\nexport type SearchPage = 'search';\nexport type SettingsPage = 'settings';\nexport type EditorPage = 'editor';\nexport type Page = HomePage | SearchPage | SettingsPage | EditorPage;\n\nexport const showPage: { [page: Page]: Function } = {\n  home: showHomePage,\n  search: showSearchPage,\n  settings: showSettingsPage,\n  editor: showEditorPage\n};\n\nexport const hidePage: { [page: Page]: Function } = {\n  home: hideHomePage,\n  search: hideSearchPage,\n  settings: hideSettingsPage,\n  editor: hideEditorPage\n};\n\nexport const tabsBarMenuItems: { [page: Page]: TabsBarMenuItemArray } = {\n  home: [\n    {\n      key: 'home--new-symbol',\n      name: 'New Symbol',\n      icon: 'add',\n      action: function () {\n        console.log('new symbol');\n      }\n    },\n    {\n      key: 'home--search',\n      name: 'Search',\n      icon: 'search',\n      action: function () {\n        const TabID = registerTab('search', 'Search', 'search', false, true, []);\n        openTab(TabID);\n      }\n    },\n    {\n      key: 'home--settings',\n      name: 'Settings',\n      icon: 'settings',\n      action: function () {\n        const TabID = registerTab('settings', 'Settings', 'settings', false, true, []);\n        openTab(TabID);\n      }\n    }\n  ],\n  search: [],\n  settings: [],\n  editor: []\n};\n","import { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../lib/selector/index';\nimport { getIconHTML } from '../icons/index';\nimport { MaterialSymbols } from '../icons/material-symbols-type';\n\nexport interface TabsBarMenuItem {\n  key: string;\n  icon: MaterialSymbols;\n  name: string;\n  action: Function;\n}\n\nexport type TabsBarMenuItemArray = Array<TabsBarMenuItem>;\n\nconst menuButtonElement = documentQuerySelector('.css_tabs_bar_menu_button');\nconst menuOverlayElement = documentQuerySelector('.css_tabs_bar_menu_overlay');\nconst menuElement = documentQuerySelector('.css_tabs_bar_menu');\n\nlet previousMenuItems: TabsBarMenuItemArray = [];\n\nfunction generateMenuItemElement(): HTMLElement {\n  const newMenuItemElement = document.createElement('div');\n  newMenuItemElement.classList.add('css_tabs_bar_menu_item');\n\n  const newIconElement = document.createElement('div');\n  newIconElement.classList.add('css_tabs_bar_menu_item_icon');\n  newMenuItemElement.appendChild(newIconElement);\n\n  const newNameElement = document.createElement('div');\n  newNameElement.classList.add('css_tabs_bar_menu_item_name');\n  newMenuItemElement.appendChild(newNameElement);\n\n  return newMenuItemElement;\n}\n\nexport function updateTabsBarMenu(menuItems: TabsBarMenuItemArray): void {\n  function updateTabsBarMenuItem(thisMenuItemElement: HTMLElement, currentMenuItem: TabsBarMenuItem, previousMenuItem: TabsBarMenuItem | undefined): void {\n    function updateIcon(thisMenuItemElement: HTMLElement, currentMenuItem: TabsBarMenuItem): void {\n      const iconElement = elementQuerySelector(thisMenuItemElement, '.css_tabs_bar_menu_item_icon');\n      iconElement.innerHTML = getIconHTML(currentMenuItem.icon);\n    }\n\n    function updateName(thisMenuItemElement: HTMLElement, currentMenuItem: TabsBarMenuItem): void {\n      const iconElement = elementQuerySelector(thisMenuItemElement, '.css_tabs_bar_menu_item_name');\n      iconElement.innerText = currentMenuItem.name;\n    }\n\n    function updateAction(thisMenuItemElement: HTMLElement, currentMenuItem: TabsBarMenuItem): void {\n      thisMenuItemElement.onclick = function (event) {\n        event.stopPropagation();\n        currentMenuItem.action();\n        closeTabsBarMenu();\n      };\n    }\n\n    if (previousMenuItem !== undefined) {\n      if (currentMenuItem.key !== previousMenuItem.key) {\n        updateIcon(thisMenuItemElement, currentMenuItem);\n        updateName(thisMenuItemElement, currentMenuItem);\n        updateAction(thisMenuItemElement, currentMenuItem);\n      }\n    } else {\n      updateIcon(thisMenuItemElement, currentMenuItem);\n      updateName(thisMenuItemElement, currentMenuItem);\n      updateAction(thisMenuItemElement, currentMenuItem);\n    }\n  }\n\n  const menuItemElements = Array.from(elementQuerySelectorAll(menuElement, '.css_tabs_bar_menu_item'));\n  const menuItemElementsLength = menuItemElements.length;\n  const menuItemsLength = menuItems.length;\n  if (menuItemsLength >= menuItemElementsLength) {\n    const fragment = new DocumentFragment();\n    for (let i = menuItemElementsLength; i < menuItemsLength; i++) {\n      const newMenuItemElement = generateMenuItemElement();\n      fragment.appendChild(newMenuItemElement);\n      menuItemElements.push(newMenuItemElement);\n    }\n    menuElement.append(fragment);\n  } else {\n    for (let j = menuItemElementsLength - 1; j >= menuItemsLength; j--) {\n      menuItemElements[j].remove();\n    }\n  }\n\n  for (let k = 0; k < menuItemsLength; k++) {\n    const previousMenuItem = previousMenuItems[k];\n    const currentMenuItem = menuItems[k];\n    const thisMenuItemElement = menuItemElements[k];\n    updateTabsBarMenuItem(thisMenuItemElement, currentMenuItem, previousMenuItem);\n  }\n\n  menuButtonElement.onclick = function () {\n    openTabsBarMenu();\n  };\n\n  menuOverlayElement.onclick = function (event) {\n    event.stopPropagation();\n    closeTabsBarMenu();\n  };\n\n  previousMenuItems = menuItems;\n}\n\nexport function openTabsBarMenu(): void {\n  menuElement.setAttribute('displayed', 'true');\n  menuOverlayElement.setAttribute('displayed', 'true');\n}\n\nexport function closeTabsBarMenu(): void {\n  menuElement.setAttribute('displayed', 'false');\n  menuOverlayElement.setAttribute('displayed', 'false');\n}\n","import { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../lib/selector/index';\nimport { booleanToString } from '../../lib/tools/boolean-to-string';\nimport { generateIdentifier } from '../../lib/tools/generate-identifier';\nimport { removeFromArray } from '../../lib/tools/remove-from-array';\nimport { getIconHTML } from '../icons/index';\nimport { MaterialSymbols } from '../icons/material-symbols-type';\nimport { hidePage, Page, showPage, tabsBarMenuItems } from '../pages/index';\nimport { updateTabsBarMenu } from './menu';\n\nexport interface Tab {\n  page: Page;\n  name: string;\n  icon: MaterialSymbols;\n  reusable: boolean;\n  closable: boolean;\n  open: boolean;\n  parameters: Array<any>;\n  time: number;\n  id: string;\n}\n\nconst tabsElement = documentQuerySelector('.css_tabs');\n\nconst Tabs: { [TabID: Tab['id']]: Tab } = {};\n\nlet previousTabsList: Array<Tab> = [];\nlet tabHistory: Array<Tab['id']> = [];\n\nfunction generateTabElement(): HTMLElement {\n  const newTabElement = document.createElement('div');\n  newTabElement.classList.add('css_tab');\n\n  const newIconElement = document.createElement('div');\n  newIconElement.classList.add('css_tab_icon');\n  newTabElement.appendChild(newIconElement);\n\n  const newNameElement = document.createElement('div');\n  newNameElement.classList.add('css_tab_name');\n  newTabElement.appendChild(newNameElement);\n\n  const newCloseElement = document.createElement('div');\n  newCloseElement.classList.add('css_tab_close');\n  newCloseElement.innerHTML = getIconHTML('close_small');\n  newTabElement.appendChild(newCloseElement);\n\n  return newTabElement;\n}\n\nfunction updateTabs(): void {\n  function updateTab(thisTabElement: HTMLElement, currentTab: Tab, previousTab: Tab | undefined): void {\n    function updateIcon(thisTabElement: HTMLElement, currentTab: Tab): void {\n      const iconElement = elementQuerySelector(thisTabElement, '.css_tab_icon');\n      iconElement.innerHTML = getIconHTML(currentTab.icon);\n    }\n\n    function updateName(thisTabElement: HTMLElement, currentTab: Tab): void {\n      const nameElement = elementQuerySelector(thisTabElement, '.css_tab_name');\n      nameElement.innerText = currentTab.name;\n    }\n\n    function updateClose(thisTabElement: HTMLElement, currentTab: Tab): void {\n      const closeElement = elementQuerySelector(thisTabElement, '.css_tab_close');\n      closeElement.onclick = currentTab.closable\n        ? function (event) {\n            event.stopPropagation();\n            closeTab(currentTab.id);\n          }\n        : function (event) {\n            event.stopPropagation();\n          };\n      thisTabElement.setAttribute('closable', booleanToString(currentTab.closable));\n    }\n\n    function updateOpen(thisTabElement: HTMLElement, currentTab: Tab): void {\n      thisTabElement.setAttribute('open', booleanToString(currentTab.open));\n      thisTabElement.onclick = function () {\n        openTab(currentTab.id);\n      };\n    }\n\n    if (previousTab !== undefined) {\n      if (currentTab.icon !== previousTab.icon) {\n        updateIcon(thisTabElement, currentTab);\n      }\n      if (currentTab.name !== previousTab.name) {\n        updateName(thisTabElement, currentTab);\n      }\n      if (currentTab.closable !== previousTab.closable || currentTab.id !== previousTab.id) {\n        updateClose(thisTabElement, currentTab);\n      }\n      if (currentTab.open !== previousTab.open || currentTab.id !== previousTab.id) {\n        updateOpen(thisTabElement, currentTab);\n      }\n    } else {\n      updateIcon(thisTabElement, currentTab);\n      updateName(thisTabElement, currentTab);\n      updateClose(thisTabElement, currentTab);\n      updateOpen(thisTabElement, currentTab);\n    }\n  }\n\n  const tabElements = Array.from(elementQuerySelectorAll(tabsElement, '.css_tab'));\n  const tabElementsLength = tabElements.length;\n  const TabsList = listTabs();\n  const TabsListLength = TabsList.length;\n  if (TabsListLength >= tabElementsLength) {\n    const fragment = new DocumentFragment();\n    for (let i = tabElementsLength; i < TabsListLength; i++) {\n      const newTabElement = generateTabElement();\n      fragment.appendChild(newTabElement);\n      tabElements.push(newTabElement);\n    }\n    tabsElement.append(fragment);\n  } else {\n    for (let j = tabElementsLength - 1; j >= TabsListLength; j--) {\n      tabElements[j].remove();\n    }\n  }\n\n  for (let k = 0; k < TabsListLength; k++) {\n    const previousTab = previousTabsList[k];\n    const currentTab = TabsList[k];\n    const thisTabElement = tabElements[k];\n    updateTab(thisTabElement, currentTab, previousTab);\n  }\n\n  previousTabsList = TabsList;\n}\n\nexport function registerTab(page: Tab['page'], name: Tab['name'], icon: Tab['icon'], reusable: Tab['reusable'], closable: Tab['closable'], parameters: Tab['parameters']): Tab['id'] {\n  if (!reusable) {\n    for (const key in Tabs) {\n      const thisTab = Tabs[key];\n      if (thisTab.page === page) {\n        return key;\n      }\n    }\n  }\n\n  const TabID = generateIdentifier();\n  const object: Tab = {\n    page: page,\n    name: name,\n    icon: icon,\n    reusable: reusable,\n    closable: closable,\n    open: false,\n    parameters: parameters,\n    time: new Date().getTime(),\n    id: TabID\n  };\n  Tabs[TabID] = object;\n  return TabID;\n}\n\nexport function listTabs(): Array<Tab> {\n  const result: Array<Tab> = [];\n  for (const key in Tabs) {\n    const thisTab = Tabs[key];\n    // clone the object to prevent previousTabsList from referencing mutated properties before UI updates\n    result.push({\n      page: thisTab.page,\n      name: thisTab.name,\n      icon: thisTab.icon,\n      reusable: thisTab.reusable,\n      closable: thisTab.closable,\n      open: thisTab.open,\n      parameters: thisTab.parameters,\n      time: thisTab.time,\n      id: thisTab.id\n    });\n  }\n  result.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  return result;\n}\n\nexport function openTab(TabID: Tab['id']): boolean {\n  const nextTab = Tabs[TabID];\n  if (nextTab) {\n    const tabHistoryLength = tabHistory.length;\n    if (tabHistoryLength > 0) {\n      const lastTabID = tabHistory[tabHistoryLength - 1];\n      const currentTab = Tabs[lastTabID];\n      if (currentTab) {\n        currentTab.open = false;\n        nextTab.open = true;\n        if (lastTabID !== TabID) tabHistory.push(TabID);\n        hidePage[currentTab.page]();\n        showPage[nextTab.page](...nextTab.parameters);\n      }\n    } else {\n      nextTab.open = true;\n      tabHistory.push(TabID);\n      showPage[nextTab.page](...nextTab.parameters);\n    }\n\n    // update tabs\n    updateTabs();\n\n    // update menu button\n    updateTabsBarMenu(tabsBarMenuItems[nextTab.page]);\n    return true;\n  }\n  return false;\n}\n\nexport function closeTab(TabID: Tab['id']): boolean {\n  const tabHistoryLength = tabHistory.length;\n  if (tabHistoryLength <= 1) return false;\n\n  const thisTab = Tabs[TabID];\n  if (!thisTab) return false;\n  if (!thisTab?.closable) return false;\n\n  for (let i = tabHistoryLength - 1; i >= 0; i--) {\n    if (tabHistory[i] !== TabID) {\n      openTab(tabHistory[i]);\n      break;\n    }\n  }\n\n  delete Tabs[TabID];\n  removeFromArray(tabHistory, TabID);\n\n  updateTabs();\n\n  return true;\n}\n\nexport function initializeTabs(): void {\n  const homeTabID = registerTab('home', 'Home', 'home', false, false, []);\n  openTab(homeTabID);\n}\n","import { initializeSymbols } from './lib/symbol/index';\nimport { initializeVariables } from './lib/variable/index';\nimport { checkAppVersion } from './lib/version/index';\nimport { initializeTabs } from './interface/tabs-bar/tabs';\n\nimport './interface/theme.css';\n\nimport './interface/index.css';\n\nimport './interface/icons/index.css';\n\nimport './interface/tabs-bar/separator.css';\nimport './interface/tabs-bar/tabs.css';\nimport './interface/tabs-bar/tab.css';\nimport './interface/tabs-bar/menu.css';\n\nimport './interface/pages/home/page.css';\nimport './interface/pages/home/body.css';\nimport './interface/pages/home/symbols/index.css';\n\nimport './interface/pages/search/page.css';\n\nimport './interface/pages/settings/page.css';\n\nimport './interface/pages/editor/page.css';\n\nwindow.value = {\n  initialize: async function () {\n    const status = await checkAppVersion();\n    if (status === 'ok') {\n      initializeTabs();\n      await initializeVariables();\n      await initializeSymbols();\n    }\n  },\n  secondlyInitialize: function () {}\n};\n\nexport default window.value;\n","export function removeFromArray(array: Array<any>, item: any): Array<any> {\n  for (let i = array.length - 1; i >= 0; i--) {\n    if (array[i] === item) {\n      array.splice(i, 1);\n    }\n  }\n  return array\n}\n","export function generateIdentifier(): string {\n  const chars = [\n    [48, 10], // 0-9: 48 - 57\n    [97, 26], // a-z: 97 - 122\n    [65, 26] // A-Z: 65 - 90\n  ];\n\n  let randomNumber1 = Math.floor(Math.random() * 0x10000000);\n  let randomNumber2 = Math.floor(Math.random() * 0x10000000);\n\n  const result = new Uint8Array(17);\n  result[0] = 95;\n  for (let i = 16; i > 0; i--) {\n    const n = randomNumber2 % 3;\n    const range = chars[n];\n    const code = range[0] + (randomNumber1 % range[1]);\n    result[i] = code;\n    randomNumber1 >>>= 1;\n    randomNumber2 >>>= 1;\n  }\n\n  return String.fromCharCode.apply(null, result);\n}\n"],"names":["primaryDelimiters","add","substract","multiply","divide","mod","sum","sqrt","pow","sin","cos","tan","log","floor","ceil","round","abs","pi","var","now","dateString","template","default","stringifyComponent","component","undefined","type","number","unit","string","delimiter","model","inner","components","map","e","join","evaluateComponent","variableMap","arguments","length","Math","PI","i","evaluated","splice","_component$components","_slicedToArray","a","b","_component$components2","_component$components3","_component$components4","_component$components5","some","total","_component$components7","_component$components1","name","hasOwnProperty","Date","getTime","_component$components15","miliseconds","format","date","replaceAll","getFullYear","toString","getMonth","padStart","getDate","getHours","getMinutes","getMilliseconds","getSeconds","arr","subComponent","unshift","localforage","require","storage","symbolsStore","variablesStore","settingsStore","cacheStore","stores","lfGetItem","_x5","_x6","_lfGetItem","apply","_asyncToGenerator","store","key","storeKey","createInstance","getItem","err","lfListItemKeys","_x9","_lfListItemKeys","keys","Variables","_initializeVariables","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","thisVariableJSON","thisVariableObject","JSON","parse","id","f","hasVariable","VariableID","getVariable","Symbols","_initializeSymbols","thisSymbolJSON","thisSymbolObject","evaluateSymbol","_x15","_evaluateSymbol","this","thisSymbol","fallback","description","icon","outputVariable","output","_step2","evaluatedVariables","_iterator2","variables","thisVariable","evaluatedVariableValue","documentQuerySelector","selectorExpression","document","querySelector","elementQuerySelector","element","elementQuerySelectorAll","querySelectorAll","refreshPageWithTimeStamp","enforce","searchParams","URLSearchParams","window","location","search","set","newUrl","pathname","replace","history","replaceState","_getAppVersion","response","fetch","cache","ok","Error","json","error","_checkAppVersion","appVersion","getAppVersion","getAttribute","hash","booleanToString","getIconHTML","identifier","editorPage","HomePageSymbolsElement","HomePageBodyElement","previousEvaluatedSymbolsList","generateSymbolElement","newSymbolElement","createElement","classList","newIconElement","appendChild","newNameElement","newValueElement","updateHomePageSymbols","updateHomePageSymbol","thisSymbolElement","currentEvaluatedSymbol","previousEvaluatedSymbol","updateIcon","innerHTML","updateName","innerText","updateValue","symbolElements","Array","from","symbolElementsLength","evaluatedSymbolsList","result","push","listEvaluatedSymbols","evaluatedSymbolsListLength","fragment","DocumentFragment","append","j","remove","k","HomePage","searchPage","settingsPage","showPage","home","setAttribute","settings","editor","SymbolID","hidePage","tabsBarMenuItems","action","console","openTab","registerTab","menuButtonElement","menuOverlayElement","menuElement","previousMenuItems","generateMenuItemElement","newMenuItemElement","updateTabsBarMenu","menuItems","updateTabsBarMenuItem","thisMenuItemElement","currentMenuItem","previousMenuItem","updateAction","onclick","event","stopPropagation","closeTabsBarMenu","menuItemElements","menuItemElementsLength","menuItemsLength","_initialize","tabsElement","Tabs","previousTabsList","tabHistory","generateTabElement","newTabElement","newCloseElement","updateTabs","updateTab","thisTabElement","currentTab","previousTab","updateClose","closable","TabID","tabHistoryLength","thisTab","array","item","removeFromArray","closeTab","updateOpen","open","tabElements","tabElementsLength","TabsList","page","reusable","parameters","time","sort","listTabs","TabsListLength","chars","randomNumber1","random","randomNumber2","Uint8Array","range","code","String","fromCharCode","generateIdentifier","object","nextTab","lastTabID","_toConsumableArray","initialize","status","checkAppVersion","initializeVariables","initializeSymbols","secondlyInitialize"],"sourceRoot":""}