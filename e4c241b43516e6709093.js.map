{"version":3,"file":"e4c241b43516e6709093.js","mappings":"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","sources":["webpack://value/./src/lib/selector/index.ts","webpack://value/./src/lib/component/evaluate.ts","webpack://value/./src/lib/symbol/index.ts","webpack://value/./src/lib/tools/generate-identifier.ts","webpack://value/./src/lib/version/index.ts","webpack://value/./src/lib/storage/index.ts","webpack://value/./src/lib/tools/boolean-to-string.ts","webpack://value/./src/lib/component/delimeters.ts","webpack://value/./src/lib/tools/remove-from-array.ts","webpack://value/./src/lib/variable/index.ts"],"sourcesContent":["export function documentQuerySelector(selectorExpression: string): HTMLElement {\n  return document.querySelector(selectorExpression);\n}\n\nexport function documentQuerySelectorAll(selectorExpression: string): NodeListOf<HTMLElement> {\n  return document.querySelectorAll(selectorExpression);\n}\n\nexport function elementQuerySelector(element: HTMLElement, selectorExpression: string): HTMLElement {\n  return element.querySelector(selectorExpression);\n}\n\nexport function elementQuerySelectorAll(element: HTMLElement, selectorExpression: string): NodeListOf<HTMLElement> {\n  return element.querySelectorAll(selectorExpression);\n}\n\nexport function getElementsBelow(referenceElement: HTMLElement, className: string): Array<HTMLElement> {\n  const elements = [];\n  let sibling = referenceElement.nextElementSibling;\n\n  while (sibling) {\n    if (sibling.classList.contains(className)) {\n      elements.push(sibling);\n    }\n    sibling = sibling.nextElementSibling;\n  }\n\n  return elements;\n}","import { Variable } from '../variable/index';\nimport { Component, NumberComponent, StringComponent, stringifyComponent } from './component';\n\nexport function evaluateComponent(component: Component, variableMap: { [VariableName: Variable['name']]: Component } = {}): Component | undefined {\n  if (component.type === 'string') {\n    return component;\n  } else if (component.type === 'number') {\n    switch (component.unit) {\n      // percentage\n      case '%': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number / 100,\n          unit: ''\n        };\n        return result;\n      }\n\n      // angle\n      case 'deg': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: (component.number * Math.PI) / 180,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'rad': {\n        return component;\n      }\n\n      // time\n      case 'ms': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'sec': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number * 1000,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'min': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number * 60 * 1000,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'hr': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number * 60 * 60 * 1000,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'day': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number * 24 * 60 * 60 * 1000,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'week': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: component.number * 7 * 24 * 60 * 60 * 1000,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'rad': {\n        return component;\n      }\n\n      default:\n        return component;\n    }\n  } else if (component.type === 'model') {\n    for (let i = component.components.length - 1; i >= 0; i--) {\n      const subComponent = component.components[i];\n      const evaluated = evaluateComponent(subComponent, variableMap);\n      if (evaluated !== undefined) {\n        component.components.splice(i, 1, evaluated);\n      } else {\n        component.components.splice(i, 1); // TODO: Throw an error\n      }\n    }\n    switch (component.model) {\n      case 'add': {\n        const [a, b] = component.components;\n        if (a.type !== 'number' || b.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: a.number + b.number,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'substract': {\n        const [a, b] = component.components;\n        if (a.type !== 'number' || b.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: a.number - b.number,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'multiply': {\n        const [a, b] = component.components;\n        if (a.type !== 'number' || b.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: a.number * b.number,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'divide': {\n        const [a, b] = component.components;\n        if (a.type !== 'number' || b.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: a.number / b.number,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'mod': {\n        const [a, b] = component.components;\n        if (a.type !== 'number' || b.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: a.number % b.number,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'sum': {\n        if (component.components.some((e) => e.type !== 'number')) return undefined;\n\n        let total = 0;\n        for (let i = component.components.length - 1; i >= 0; i--) {\n          const subComponent = component.components[i] as NumberComponent;\n          total += subComponent.number;\n        }\n        const result: NumberComponent = {\n          type: 'number',\n          number: total,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'sqrt': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.sqrt(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'pow': {\n        const [a, b] = component.components;\n        if (a.type !== 'number' || b.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.pow(a.number, b.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'sin': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.sin(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'cos': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.cos(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'tan': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.tan(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'log': {\n        const [a, b] = component.components;\n        if (a.type !== 'number') return undefined;\n        if (b !== undefined && b.type === 'number') {\n          const result: NumberComponent = {\n            type: 'number',\n            number: Math.log(a.number) / Math.log(b.number),\n            unit: ''\n          };\n          return result;\n        } else {\n          const result: NumberComponent = {\n            type: 'number',\n            number: Math.log(a.number),\n            unit: ''\n          };\n          return result;\n        }\n      }\n\n      case 'floor': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.floor(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'ceil': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.ceil(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'round': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.round(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'abs': {\n        const [a] = component.components;\n        if (a.type !== 'number') return undefined;\n\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.abs(a.number),\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'pi': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: Math.PI,\n          unit: ''\n        };\n        return result;\n      }\n\n      case 'var': {\n        const [name] = component.components;\n        if (name === undefined) return undefined;\n        if (name.type !== 'string') return undefined;\n        if (!variableMap.hasOwnProperty(name)) return undefined;\n        return variableMap[name];\n        break;\n      }\n\n      case 'now': {\n        const result: NumberComponent = {\n          type: 'number',\n          number: new Date().getTime(),\n          unit: ''\n        };\n        return result;\n        break;\n      }\n\n      case 'dateString': {\n        const [miliseconds, format] = component.components;\n        if (miliseconds.type !== 'number') return undefined;\n\n        const date = new Date(miliseconds.number);\n\n        if (format !== undefined && format.type === 'string') {\n          const string = format.string\n            .replaceAll(/Y{2,}/g, date.getFullYear().toString())\n            .replaceAll(/M{2}/g, (date.getMonth() + 1).toString().padStart(2, '0'))\n            .replaceAll(/M{1}/g, (date.getMonth() + 1).toString())\n            .replaceAll(/D{2}/g, date.getDate().toString().padStart(2, '0'))\n            .replaceAll(/D{1}/g, date.getDate().toString())\n            .replaceAll(/h{2}/g, date.getHours().toString().padStart(2, '0'))\n            .replaceAll(/h{1}/g, date.getHours().toString())\n            .replaceAll(/m{2}/g, date.getMinutes().toString().padStart(2, '0'))\n            .replaceAll(/m{1}/g, date.getMinutes().toString())\n            .replaceAll(/s{3}/g, date.getMilliseconds().toString())\n            .replaceAll(/s{2}/g, date.getSeconds().toString().padStart(2, '0'))\n            .replaceAll(/s{1}/g, date.getSeconds().toString());\n\n          const result: StringComponent = {\n            type: 'string',\n            string: string\n          };\n          return result;\n        }\n      }\n\n      case 'template': {\n        const arr: Array<string> = [];\n        for (let i = component.components.length - 1; i >= 0; i--) {\n          const subComponent = component.components[i];\n          arr.unshift(stringifyComponent(subComponent));\n        }\n        const result: StringComponent = {\n          type: 'string',\n          string: arr.join(' ')\n        };\n        return result;\n      }\n\n      default:\n        return undefined;\n        break;\n    }\n  }\n}\n","import { MaterialSymbols } from '../../interface/icons/material-symbols-type';\nimport { Component, stringifyComponent } from '../component/component';\nimport { evaluateComponent } from '../component/evaluate';\nimport { lfGetItem, lfListItemKeys, lfRemoveItem, lfSetItem } from '../storage/index';\nimport { generateIdentifier } from '../tools/generate-identifier';\nimport { deleteVariable, getVariable, hasVariable, Variable } from '../variable/index';\n\nexport interface Symbol {\n  type: 'symbol';\n  name: string;\n  description: string;\n  icon: MaterialSymbols;\n  variables: Array<Variable['id']>;\n  output: Variable['id'];\n  id: string;\n}\n\nexport interface EvaluatedSymbol {\n  type: 'evaluated-symbol';\n  name: string;\n  description: string;\n  icon: MaterialSymbols;\n  value: string;\n  id: string;\n}\n\nconst Symbols: {\n  [id: Symbol['id']]: Symbol;\n} = {};\n\nexport async function initializeSymbols() {\n  const keys = await lfListItemKeys(0);\n  for (const key of keys) {\n    const thisSymbolJSON = await lfGetItem(0, key);\n    if (thisSymbolJSON) {\n      const thisSymbolObject = JSON.parse(thisSymbolJSON) as Symbol;\n      Symbols[thisSymbolObject.id] = thisSymbolObject;\n    }\n  }\n}\n\nexport async function createSymbol(): Promise<Symbol['id']> {\n  const SymbolID = generateIdentifier();\n  const object: Symbol = {\n    type: 'symbol',\n    name: 'New Symbol',\n    description: '',\n    icon: 'glyphs',\n    variables: [],\n    output: '',\n    id: SymbolID\n  };\n\n  Symbols[SymbolID] = object;\n\n  await lfSetItem(0, SymbolID, JSON.stringify(object));\n\n  return SymbolID;\n}\n\nexport function hasSymbol(SymbolID: Symbol['id']): boolean {\n  return Symbols.hasOwnProperty(SymbolID);\n}\n\nexport function getSymbol(SymbolID: Symbol['id']): Symbol | undefined {\n  if (hasSymbol(SymbolID)) {\n    return Symbols[SymbolID];\n  } else {\n    return undefined;\n  }\n}\n\nexport async function deleteSymbol(SymbolID: Symbol['id']): Promise<boolean> {\n  if (hasSymbol(SymbolID)) {\n    delete Symbols[SymbolID];\n    await lfRemoveItem(0, SymbolID);\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport async function setSymbolName(SymbolID: Symbol['id'], name: Symbol['name']): Promise<boolean> {\n  if (!hasSymbol(SymbolID)) return false;\n  const thisSymbolObject = Symbols[SymbolID];\n  thisSymbolObject.name = name;\n  Symbols[SymbolID] = thisSymbolObject;\n  await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n  return true;\n}\n\nexport async function setSymbolDescription(SymbolID: Symbol['id'], description: Symbol['description']): Promise<boolean> {\n  if (!hasSymbol(SymbolID)) return false;\n  const thisSymbolObject = Symbols[SymbolID];\n  thisSymbolObject.description = description;\n  Symbols[SymbolID] = thisSymbolObject;\n  await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n  return true;\n}\n\nexport async function setSymbolIcon(SymbolID: Symbol['id'], icon: Symbol['icon']): Promise<boolean> {\n  if (!hasSymbol(SymbolID)) return false;\n  // TODO: validate icon\n  const thisSymbolObject = Symbols[SymbolID];\n  thisSymbolObject.icon = icon;\n  Symbols[SymbolID] = thisSymbolObject;\n  await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n  return true;\n}\n\nexport async function setSymbolOutput(SymbolID: Symbol['id'], output: Symbol['output']): Promise<boolean> {\n  if (!hasSymbol(SymbolID)) return false;\n  const thisSymbolObject = Symbols[SymbolID];\n  thisSymbolObject.output = output;\n  Symbols[SymbolID] = thisSymbolObject;\n  await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n  return true;\n}\n\nexport async function addVariableToSymbol(SymbolID: Symbol['id'], VariableID: Variable['id']): Promise<number> {\n  if (!hasSymbol(SymbolID)) return -1;\n  if (!hasVariable(VariableID)) return -1;\n  const thisSymbolObject = Symbols[SymbolID];\n  const existingIndex = thisSymbolObject.variables.indexOf(VariableID);\n  if (existingIndex === -1) {\n    thisSymbolObject.variables.push(VariableID);\n    Symbols[SymbolID] = thisSymbolObject;\n    await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n    return thisSymbolObject.variables.length - 1;\n  } else {\n    return existingIndex;\n  }\n}\n\nexport async function removeVariableFromSymbol(SymbolID: Symbol['id'], VariableID: Variable['id']): Promise<boolean> {\n  if (!hasSymbol(SymbolID)) return false;\n  if (!hasVariable(VariableID)) return false;\n  const thisSymbolObject = Symbols[SymbolID];\n  const existingIndex = thisSymbolObject.variables.indexOf(VariableID);\n  if (existingIndex === -1) {\n    return false;\n  } else {\n    thisSymbolObject.variables.splice(existingIndex, 1);\n    Symbols[SymbolID] = thisSymbolObject;\n    await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n    await deleteVariable(VariableID);\n    return true;\n  }\n}\n\nexport async function moveVariableInSymbol(SymbolID: Symbol['id'], VariableID: Variable['id'], offset: number): Promise<boolean> {\n  if (!hasSymbol(SymbolID)) return false;\n  if (!hasVariable(VariableID)) return false;\n  const thisSymbolObject = Symbols[SymbolID];\n  const existingIndex = thisSymbolObject.variables.indexOf(VariableID);\n  if (existingIndex === -1) {\n    return false;\n  } else {\n    thisSymbolObject.variables.splice(existingIndex, 1);\n    thisSymbolObject.variables.splice(existingIndex + offset, 0, VariableID);\n    Symbols[SymbolID] = thisSymbolObject;\n    await lfSetItem(0, SymbolID, JSON.stringify(thisSymbolObject));\n    return true;\n  }\n}\n\nexport function evaluateSymbol(thisSymbol: Symbol): EvaluatedSymbol {\n  const fallback: EvaluatedSymbol = {\n    type: 'evaluated-symbol',\n    name: thisSymbol.name,\n    description: thisSymbol.description,\n    icon: thisSymbol.icon,\n    value: 'undefined',\n    id: thisSymbol.id\n  };\n\n  const outputVariableID = thisSymbol.output;\n  const outputVariable = getVariable(outputVariableID);\n  if (outputVariable === undefined) return fallback;\n\n  const evaluatedVariables: { [VariableName: Variable['name']]: Component } = {};\n  const variableIDs = thisSymbol.variables;\n  for (const variableID of variableIDs) {\n    const thisVariable = getVariable(variableID);\n    if (thisVariable === undefined) continue;\n    if (thisVariable?.template === undefined) continue;\n    const evaluatedVariableValue = evaluateComponent(thisVariable.template, evaluatedVariables);\n    if (evaluatedVariableValue === undefined) continue;\n    evaluatedVariables[thisVariable.name] = evaluatedVariableValue;\n  }\n\n  if (!evaluatedVariables.hasOwnProperty(outputVariable.name)) return fallback;\n\n  return {\n    type: 'evaluated-symbol',\n    name: thisSymbol.name,\n    description: thisSymbol.description,\n    icon: thisSymbol.icon,\n    value: stringifyComponent(evaluatedVariables[outputVariable.name]),\n    id: thisSymbol.id\n  };\n}\n\nexport function listSymbols(): Array<Symbol> {\n  const result: Array<Symbol> = [];\n\n  for (const key in Symbols) {\n    const thisSymbol = Symbols[key];\n    result.push({\n      type: 'symbol',\n      name: thisSymbol.name,\n      description: thisSymbol.description,\n      variables: thisSymbol.variables,\n      output: thisSymbol.output,\n      id: thisSymbol.id\n    });\n  }\n\n  return result;\n}\n\nexport function listEvaluatedSymbols(): Array<EvaluatedSymbol> {\n  const result: Array<EvaluatedSymbol> = [];\n  for (const key in Symbols) {\n    const thisSymbol = Symbols[key];\n    result.push(evaluateSymbol(thisSymbol));\n  }\n\n  return result;\n}\n","export function generateIdentifier(): string {\n  const chars = [\n    [48, 10], // 0-9: 48 - 57\n    [97, 26], // a-z: 97 - 122\n    [65, 26] // A-Z: 65 - 90\n  ];\n\n  let randomNumber1 = Math.floor(Math.random() * 0x10000000);\n  let randomNumber2 = Math.floor(Math.random() * 0x10000000);\n\n  const result = new Uint8Array(17);\n  result[0] = 95;\n  for (let i = 16; i > 0; i--) {\n    const n = randomNumber2 % 3;\n    const range = chars[n];\n    const code = range[0] + (randomNumber1 % range[1]);\n    result[i] = code;\n    randomNumber1 >>>= 1;\n    randomNumber2 >>>= 1;\n  }\n\n  return String.fromCharCode.apply(null, result);\n}\n","import { documentQuerySelector } from '../selector/index';\n\nfunction refreshPageWithTimeStamp(id: string, enforce: boolean = false): void {\n  // Get the URLSearchParams object from the current URL\n  const searchParams = new URLSearchParams(window.location.search);\n  // Set the 'timestamp' query parameter to the current timestamp\n  searchParams.set('v', id);\n  // Construct the new URL with updated query parameters\n  const newUrl = window.location.pathname + '?' + searchParams.toString();\n  if (enforce) {\n    // Redirect to the new URL\n    window.location.replace(newUrl);\n  } else {\n    history.replaceState(null, '', newUrl);\n  }\n}\n\ninterface AppVersion {\n  build: number;\n  hash: string;\n  full_hash: string;\n  branch_name: string; // branch name of the code base\n  timestamp: string; // timestamp in ISO fromat\n}\n\nasync function getAppVersion(): Promise<AppVersion | false> {\n  try {\n    const response = await fetch(`./version.json?_=${new Date().getTime()}`, {\n      cache: 'no-store'\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  } catch (error) {\n    console.error('There was a problem with the fetch operation:', error);\n    return false;\n  }\n}\n\nexport function getHTMLVersionHash(): string {\n  return documentQuerySelector('head meta[name=\"version-hash\"]').getAttribute('content');\n}\n\nexport function getHTMLVersionFullHash(): string {\n  return documentQuerySelector('head meta[name=\"version-full-hash\"]').getAttribute('content');\n}\n\nexport function getHTMLVersionBranchName(): string {\n  return documentQuerySelector('head meta[name=\"version-branch-name\"]').getAttribute('content');\n}\n\nexport function getCommitURLOfCurrentVersion(): string {\n  const currentFullHash = getHTMLVersionFullHash();\n  return `https://github.com/EricHsia7/value/commit/${currentFullHash}`;\n}\n\nexport function getHTMLVersionTimeStamp(): string {\n  return documentQuerySelector('head meta[name=\"version-time-stamp\"]').getAttribute('content');\n}\n\ntype AppVersionStatus = 'fetchError' | 'unknownError' | 'refreshing' | 'ok';\n\nexport async function checkAppVersion(): Promise<AppVersionStatus> {\n  const appVersion = await getAppVersion();\n  if (typeof appVersion === 'boolean') {\n    if (appVersion === false) {\n      return 'fetchError';\n    } else {\n      return 'unknownError';\n    }\n  } else {\n    if (getHTMLVersionHash() !== appVersion.hash) {\n      refreshPageWithTimeStamp(appVersion.hash, true);\n      return 'refreshing';\n    } else {\n      refreshPageWithTimeStamp(appVersion.hash, false);\n      return 'ok';\n    }\n  }\n}\n","const localforage = require('localforage');\n\nlet storage = {\n  v_symbolsStore: false, // 0\n  v_variablesStore: false, // 1\n  v_settingsStore: false, // 2\n  v_cacheStore: false // 3\n};\n\nconst stores = ['v_symbolsStore', 'v_variablesStore', 'v_settingsStore', 'v_cacheStore'];\n\nasync function dropInstance(store: number): Promise<any> {\n  const storeKey = stores[store];\n  if (storage[storeKey] === false) {\n    storage[storeKey] = await localforage.createInstance({\n      name: storeKey\n    });\n  }\n  const operation = await storage[storeKey].dropInstance();\n  return operation;\n}\n\nexport async function lfSetItem(store: number, key: string, value: any): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].setItem(key, value);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n}\n\nexport async function lfGetItem(store: number, key: string): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].getItem(key);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n}\n\nexport async function lfRemoveItem(store: number, key: string): Promise<any> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const operation = await storage[storeKey].removeItem(key);\n    return operation;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n}\n\nexport async function lfListItemKeys(store: number): Promise<Array<string>> {\n  try {\n    const storeKey = stores[store];\n    if (storage[storeKey] === false) {\n      storage[storeKey] = await localforage.createInstance({\n        name: storeKey\n      });\n    }\n    const keys = await storage[storeKey].keys();\n    return keys;\n  } catch (err) {\n    console.error(err);\n    return [];\n  }\n}\n\nexport function getStoreKey(store: number): string {\n  return stores[store];\n}\n\nexport function getStoresLength(): number {\n  return stores.length;\n}\n\nexport async function isStoragePersistent(): Promise<boolean> {\n  // Check if site's storage has been marked as persistent\n  if (navigator.storage) {\n    if (navigator.storage.persist) {\n      const isPersisted = await navigator.storage.persisted();\n      return isPersisted;\n    }\n  }\n  return false;\n}\n\nexport async function askForPersistentStorage(): Promise<'granted' | 'denied' | 'unsupported'> {\n  // Request persistent storage for site\n  if (navigator.storage) {\n    if (navigator.storage.persist) {\n      const isPersisted = await navigator.storage.persist();\n      return isPersisted ? 'granted' : 'denied';\n    }\n  }\n  return 'unsupported';\n}\n","export function booleanToString(value: Boolean): 'true' | 'false' {\n  if (value === true) {\n    return 'true';\n  } else {\n    return 'false';\n  }\n}\n","export const delimeters = {\n  add: [','],\n  substract: [','],\n  multiply: [','],\n  divide: [','],\n  mod: [','],\n  sum: [','],\n  sqrt: [],\n  pow: [','],\n  sin: [],\n  cos: [],\n  tan: [],\n  log: [','],\n  floor: [],\n  ceil: [],\n  round: [],\n  abs: [],\n  pi: [],\n  var: [','],\n  now: [],\n  dateString: [','],\n  template: [','],\n  default: [',']\n};\n\nexport const primaryDelimiters = {\n  add: ',',\n  substract: ',',\n  multiply: ',',\n  divide: ',',\n  mod: ',',\n  sum: ',',\n  sqrt: ' ',\n  pow: ',',\n  sin: ' ',\n  cos: ' ',\n  tan: ' ',\n  log: ',',\n  floor: ' ',\n  ceil: ' ',\n  round: ' ',\n  abs: ' ',\n  pi: ' ',\n  var: ',',\n  now: ' ',\n  dateString: ',',\n  template: ',',\n  default: ','\n};\n","export function removeFromArray(array: Array<any>, item: any): Array<any> {\n  for (let i = array.length - 1; i >= 0; i--) {\n    if (array[i] === item) {\n      array.splice(i, 1);\n    }\n  }\n  return array\n}\n","import { ModelComponent } from '../component/component';\nimport { lfGetItem, lfListItemKeys, lfRemoveItem, lfSetItem } from '../storage/index';\nimport { generateIdentifier } from '../tools/generate-identifier';\n\nexport interface Variable {\n  type: 'variable';\n  name: string;\n  template: ModelComponent<'template'> | undefined;\n  id: string;\n}\n\nconst Variables: {\n  [id: Variable['id']]: Variable;\n} = {};\n\nexport async function initializeVariables() {\n  const keys = await lfListItemKeys(1);\n  for (const key of keys) {\n    const thisVariableJSON = await lfGetItem(1, key);\n    if (thisVariableJSON) {\n      const thisVariableObject = JSON.parse(thisVariableJSON) as Symbol;\n      Variables[thisVariableObject.id] = thisVariableObject;\n    }\n  }\n}\n\nexport async function createVariable(): Promise<Variable['id']> {\n  const identifier = generateIdentifier();\n  const object: Variable = {\n    type: 'variable',\n    name: identifier,\n    template: undefined,\n    id: identifier\n  };\n\n  Variables[identifier] = object;\n\n  await lfSetItem(1, identifier, JSON.stringify(object));\n\n  return identifier;\n}\n\nexport function hasVariable(VariableID: Variable['id']): boolean {\n  return Variables.hasOwnProperty(VariableID);\n}\n\nexport function getVariable(VariableID: Variable['id']): Variable | undefined {\n  if (hasVariable(VariableID)) {\n    return Variables[VariableID];\n  } else {\n    return undefined;\n  }\n}\n\nexport async function deleteVariable(VariableID: Variable['id']): Promise<boolean> {\n  if (hasVariable(VariableID)) {\n    delete Variables[VariableID];\n    await lfRemoveItem(1, VariableID);\n    return true;\n  } else {\n    return false;\n  }\n}\n"],"names":["documentQuerySelector","selectorExpression","document","querySelector","elementQuerySelector","element","elementQuerySelectorAll","querySelectorAll","evaluateComponent","component","variableMap","arguments","length","undefined","type","unit","number","Math","PI","i","components","evaluated","splice","model","_component$components","_slicedToArray","a","b","_component$components2","_component$components3","_component$components4","_component$components5","some","e","total","sqrt","_component$components7","pow","sin","cos","tan","_component$components1","log","floor","ceil","round","abs","name","hasOwnProperty","Date","getTime","_component$components15","miliseconds","format","date","string","replaceAll","getFullYear","toString","getMonth","padStart","getDate","getHours","getMinutes","getMilliseconds","getSeconds","arr","subComponent","unshift","stringifyComponent","join","Symbols","initializeSymbols","_initializeSymbols","apply","_asyncToGenerator","_step2","_iterator2","_createForOfIteratorHelper","lfListItemKeys","s","n","done","key","value","thisSymbolJSON","lfGetItem","thisSymbolObject","JSON","parse","id","err","f","createSymbol","_createSymbol","SymbolID","generateIdentifier","object","description","icon","variables","output","lfSetItem","stringify","hasSymbol","getSymbol","setSymbolName","_x2","_x3","_setSymbolName","setSymbolDescription","_x4","_x5","_setSymbolDescription","evaluateSymbol","thisSymbol","fallback","outputVariableID","outputVariable","getVariable","_step","evaluatedVariables","_iterator","variableID","thisVariable","template","evaluatedVariableValue","listEvaluatedSymbols","result","push","chars","randomNumber1","random","randomNumber2","Uint8Array","range","code","String","fromCharCode","refreshPageWithTimeStamp","enforce","searchParams","URLSearchParams","window","location","search","set","newUrl","pathname","replace","history","replaceState","_getAppVersion","response","fetch","cache","ok","Error","json","error","checkAppVersion","_checkAppVersion","appVersion","getAppVersion","getAttribute","hash","localforage","require","storage","v_symbolsStore","v_variablesStore","v_settingsStore","v_cacheStore","stores","_lfSetItem","store","storeKey","createInstance","setItem","_x6","_lfGetItem","getItem","_x9","_lfListItemKeys","keys","booleanToString","primaryDelimiters","add","substract","multiply","divide","mod","sum","pi","var","now","dateString","default","removeFromArray","array","item","Variables","initializeVariables","_initializeVariables","thisVariableJSON","thisVariableObject","hasVariable","VariableID"],"sourceRoot":""}