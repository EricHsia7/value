{"version":3,"file":"236efe9997b18b75ace3.js","mappings":"qLAEO,SAASA,EAAYC,GAC1B,MAAgB,mBAA8CA,UAChE,C,yHCDA,IAAMC,GAAiBC,EAAAA,EAAAA,IAAsB,MACvCC,GAAwBC,EAAAA,EAAAA,IAAqBH,EAAgB,MAC7DI,GAAsBD,EAAAA,EAAAA,IAAqBD,EAAuB,uBAClEG,GAA2BF,EAAAA,EAAAA,IAAqBC,EAAqB,yBACrEE,GAA6BH,EAAAA,EAAAA,IAAqBD,EAAuB,8BACzEK,GAAqCJ,EAAAA,EAAAA,IAAqBG,EAA4B,eAiB3F,SAAAE,I,MAAA,O,EAJM,UAAkCC,GACvCT,EAAeU,aAAa,YAAa,eACnCC,EAAAA,EAAAA,IAAcF,EAAUJ,EAAyBO,aACjDC,EAAAA,EAAAA,IAAqBJ,EAAUF,EAAmCK,MAC1E,EAACJ,E,4KAAAA,EAAAM,MAAA,KAAAC,UAAA,CCtBD,IAAMC,GAAiBf,EAAAA,EAAAA,IAAsB,OCE7C,IAAMgB,GAAWhB,EAAAA,EAAAA,IAAsB,MACjCiB,GAAsBf,EAAAA,EAAAA,IAAqBc,EAAU,MACrDE,GAAyBhB,EAAAA,EAAAA,IAAqBe,EAAqB,MAErEE,EAAuD,GAE3D,SAASC,IACP,IAAMC,EAAmBC,SAASC,cAAc,OAChDF,EAAiBG,UAAUC,IAAI,KAE/B,IAAMC,EAAiBJ,SAASC,cAAc,OAC9CG,EAAeF,UAAUC,IAAI,KAC7BJ,EAAiBM,YAAYD,GAE7B,IAAME,EAAiBN,SAASC,cAAc,OAC9CK,EAAeJ,UAAUC,IAAI,KAC7BJ,EAAiBM,YAAYC,GAE7B,IAAMC,EAAkBP,SAASC,cAAc,OAI/C,OAHAM,EAAgBL,UAAUC,IAAI,KAC9BJ,EAAiBM,YAAYE,GAEtBR,CACT,CCzBA,IAAML,GAAWhB,EAAAA,EAAAA,IAAsB,OACXE,EAAAA,EAAAA,IAAqBc,EAAU,MAE3D,SAASc,KDwBF,WACL,SAASC,EAAqBC,EAAgCC,EAAyCC,GACrG,SAASC,EAAWH,EAAgCC,IAC9B/B,EAAAA,EAAAA,IAAqB8B,EAAmB,MAChDI,UAAYvC,EAAYoC,EAAuBI,KAC7D,CAEA,SAASC,EAAWN,EAAgCC,IAC9B/B,EAAAA,EAAAA,IAAqB8B,EAAmB,MAChDO,UAAYN,EAAuBO,IACjD,CAEA,SAASC,EAAYT,EAAgCC,IAC9B/B,EAAAA,EAAAA,IAAqB8B,EAAmB,MAChDO,UAAYN,EAAuBtB,KAClD,CAEA,SAAS+B,EAAWV,EAAgCC,GAClDD,EAAkBW,QAAU,WAE1BC,EADcC,EAAY,aAAcZ,EAAuBO,KAAM,QAAQ,GAAM,EAAM,CAACP,EAAuBa,KAEnH,CACF,MAEgCC,IAA5Bb,GACED,EAAuBI,OAASH,EAAwBG,MAC1DF,EAAWH,EAAmBC,GAE5BA,EAAuBO,OAASN,EAAwBM,MAC1DF,EAAWN,EAAmBC,GAE5BA,EAAuBtB,QAAUuB,EAAwBvB,OAC3D8B,EAAYT,EAAmBC,GAE7BA,EAAuBa,KAAOZ,EAAwBY,IAAMb,EAAuBO,OAASN,EAAwBM,MACtHE,EAAWV,EAAmBC,KAGhCE,EAAWH,EAAmBC,GAC9BK,EAAWN,EAAmBC,GAC9BQ,EAAYT,EAAmBC,GAC/BS,EAAWV,EAAmBC,GAElC,CAEA,IAAMe,EAAiBC,MAAMC,MAAKC,EAAAA,EAAAA,IAAwBjC,EAAwB,OAC5EkC,EAAuBJ,EAAeK,OACtCC,GAAuBC,EAAAA,EAAAA,MACvBC,EAA6BF,EAAqBD,OACxD,GAAIG,GAA8BJ,EAAsB,CAEtD,IADA,IAAMK,EAAW,IAAIC,iBACZC,EAAIP,EAAsBO,EAAIH,EAA4BG,IAAK,CACtE,IAAMtC,EAAmBD,IACzBqC,EAAS9B,YAAYN,GACrB2B,EAAeY,KAAKvC,EACtB,CACAH,EAAuB2C,OAAOJ,EAChC,MACE,IAAK,IAAIK,EAAIV,EAAuB,EAAGU,GAAKN,EAA4BM,IACtEd,EAAec,GAAGC,SAItB,IAAK,IAAIC,EAAI,EAAGA,EAAIR,EAA4BQ,IAAK,CACnD,IAAM9B,EAA0Bf,EAA6B6C,GACvD/B,EAAyBqB,EAAqBU,GAEpDjC,EAD0BiB,EAAegB,GACD/B,EAAwBC,EAClE,CAEAf,EAA+BmC,CACjC,CC9FEW,EACF,CCNA,IAAMC,GAAalE,EAAAA,EAAAA,IAAsB,MCAzC,IAAMmE,GAAenE,EAAAA,EAAAA,IAAsB,M,yHCcpC,I,EAsBKoE,EAtBCC,EAAuC,CAClDC,KHPK,WACLtD,EAASP,aAAa,YAAa,QACnCqB,GACF,EGKEyC,OFdK,WACLL,EAAWzD,aAAa,YAAa,OACvC,EEaE+D,SDfK,WACLL,EAAa1D,aAAa,YAAa,OACzC,ECcEgE,WNJK,SAA4BjE,GACjCT,EAAeU,aAAa,YAAa,QAP3C,SAA0BD,GACxB,IAAMkE,GAAaC,EAAAA,EAAAA,IAAUnE,GAC7BJ,EAAyBO,MAAQ+D,EAAWlC,KAC5ClC,EAAmCK,MAAQ+D,EAAWE,WACxD,CAIEC,CAAiBrE,EACnB,EMEEsE,aLhBK,SAA8BtE,GACnCO,EAAeN,aAAa,YAAa,OAC3C,GKiBasE,EAAuC,CAClDT,KHVK,WACLtD,EAASP,aAAa,YAAa,QACrC,EGSE8D,OFlBK,WACLL,EAAWzD,aAAa,YAAa,QACvC,EEiBE+D,SDnBK,WACLL,EAAa1D,aAAa,YAAa,QACzC,ECkBEgE,WNPK,SAAiCO,GAAA,OAAAzE,EAAAM,MAAC,KAADC,UAAA,EMQtCgE,aLpBK,WACL/D,EAAeN,aAAa,YAAa,QAC3C,GKqBawE,EAA2D,CACtEX,KAAM,CACJ,CACEY,IAAK,mBACL1C,KAAM,aACNH,KAAM,MACN8C,Q,EAAQ,YAINvC,EAFcC,EAAY,aAAc,aAAc,QAAQ,GAAM,EAAM,OADnDuC,EAAAA,EAAAA,QAIzB,EALMhB,E,4KAKL,WALK,OAAAA,EAAAvD,MAAA,KAAAC,UAAA,IAOR,CACEoE,IAAK,eACL1C,KAAM,SACNH,KAAM,SACN8C,OAAQ,WAENvC,EADcC,EAAY,SAAU,SAAU,UAAU,GAAO,EAAM,IAEvE,GAEF,CACEqC,IAAK,iBACL1C,KAAM,WACNH,KAAM,WACN8C,OAAQ,WAENvC,EADcC,EAAY,WAAY,WAAY,YAAY,GAAO,EAAM,IAE7E,IAGJ0B,OAAQ,GACRC,SAAU,GACVC,WAAY,GACZK,aAAc,ICtDVO,GAAoBrF,EAAAA,EAAAA,IAAsB,MAC1CsF,GAAqBtF,EAAAA,EAAAA,IAAsB,MAC3CuF,GAAcvF,EAAAA,EAAAA,IAAsB,MAEtCwF,EAA0C,GAE9C,SAASC,IACP,IAAMC,EAAqBpE,SAASC,cAAc,OAClDmE,EAAmBlE,UAAUC,IAAI,KAEjC,IAAMC,EAAiBJ,SAASC,cAAc,OAC9CG,EAAeF,UAAUC,IAAI,KAC7BiE,EAAmB/D,YAAYD,GAE/B,IAAME,EAAiBN,SAASC,cAAc,OAI9C,OAHAK,EAAeJ,UAAUC,IAAI,KAC7BiE,EAAmB/D,YAAYC,GAExB8D,CACT,CAEO,SAASC,EAAkBC,GAChC,SAASC,EAAsBC,EAAkCC,EAAkCC,GACjG,SAAS7D,EAAW2D,EAAkCC,IAChC7F,EAAAA,EAAAA,IAAqB4F,EAAqB,MAClD1D,UAAYvC,EAAYkG,EAAgB1D,KACtD,CAEA,SAASC,EAAWwD,EAAkCC,IAChC7F,EAAAA,EAAAA,IAAqB4F,EAAqB,MAClDvD,UAAYwD,EAAgBvD,IAC1C,CAEA,SAASyD,EAAaH,EAAkCC,GACtDD,EAAoBnD,QAAU,SAAUuD,GACtCA,EAAMC,kBACNJ,EAAgBZ,SAChBiB,GACF,CACF,MAEyBrD,IAArBiD,EACED,EAAgBb,MAAQc,EAAiBd,MAC3C/C,EAAW2D,EAAqBC,GAChCzD,EAAWwD,EAAqBC,GAChCE,EAAaH,EAAqBC,KAGpC5D,EAAW2D,EAAqBC,GAChCzD,EAAWwD,EAAqBC,GAChCE,EAAaH,EAAqBC,GAEtC,CAEA,IAAMM,EAAmBpD,MAAMC,MAAKC,EAAAA,EAAAA,IAAwBoC,EAAa,OACnEe,EAAyBD,EAAiBhD,OAC1CkD,EAAkBX,EAAUvC,OAClC,GAAIkD,GAAmBD,EAAwB,CAE7C,IADA,IAAM7C,EAAW,IAAIC,iBACZC,EAAI2C,EAAwB3C,EAAI4C,EAAiB5C,IAAK,CAC7D,IAAM+B,EAAqBD,IAC3BhC,EAAS9B,YAAY+D,GACrBW,EAAiBzC,KAAK8B,EACxB,CACAH,EAAY1B,OAAOJ,EACrB,MACE,IAAK,IAAIK,EAAIwC,EAAyB,EAAGxC,GAAKyC,EAAiBzC,IAC7DuC,EAAiBvC,GAAGC,SAIxB,IAAK,IAAIC,EAAI,EAAGA,EAAIuC,EAAiBvC,IAAK,CACxC,IAAMgC,EAAmBR,EAAkBxB,GACrC+B,EAAkBH,EAAU5B,GAElC6B,EAD4BQ,EAAiBrC,GACF+B,EAAiBC,EAC9D,CAEAX,EAAkB1C,QAAU,WAa5B4C,EAAY9E,aAAa,YAAa,QACtC6E,EAAmB7E,aAAa,YAAa,OAZ7C,EAEA6E,EAAmB3C,QAAU,SAAUuD,GACrCA,EAAMC,kBACNC,GACF,EAEAZ,EAAoBI,CACtB,CAOO,SAASQ,IACdb,EAAY9E,aAAa,YAAa,SACtC6E,EAAmB7E,aAAa,YAAa,QAC/C,C,8tBC1FA,ICYY+F,EDZNC,GAAczG,EAAAA,EAAAA,IAAsB,MAEpC0G,EAAoC,CAAC,EAEvCC,EAA+B,GAC/BC,EAA+B,GAEnC,SAASC,IACP,IAAMC,EAAgBxF,SAASC,cAAc,OAC7CuF,EAActF,UAAUC,IAAI,KAE5B,IAAMC,EAAiBJ,SAASC,cAAc,OAC9CG,EAAeF,UAAUC,IAAI,KAC7BqF,EAAcnF,YAAYD,GAE1B,IAAME,EAAiBN,SAASC,cAAc,OAC9CK,EAAeJ,UAAUC,IAAI,KAC7BqF,EAAcnF,YAAYC,GAE1B,IAAMmF,EAAkBzF,SAASC,cAAc,OAK/C,OAJAwF,EAAgBvF,UAAUC,IAAI,KAC9BsF,EAAgB3E,UAAYvC,EAAY,eACxCiH,EAAcnF,YAAYoF,GAEnBD,CACT,CAEA,SAASE,IACP,SAASC,EAAUC,EAA6BC,EAAiBC,GAC/D,SAASjF,EAAW+E,EAA6BC,IAC3BjH,EAAAA,EAAAA,IAAqBgH,EAAgB,MAC7C9E,UAAYvC,EAAYsH,EAAW9E,KACjD,CAEA,SAASC,EAAW4E,EAA6BC,IAC3BjH,EAAAA,EAAAA,IAAqBgH,EAAgB,MAC7C3E,UAAY4E,EAAW3E,IACrC,CAEA,SAAS6E,EAAYH,EAA6BC,IAC3BjH,EAAAA,EAAAA,IAAqBgH,EAAgB,MAC7CvE,QAAUwE,EAAWG,SAC9B,SAAUpB,GACRA,EAAMC,kBAgJX,SAAkBoB,GACvB,IAAMC,EAAmBZ,EAAWvD,OACpC,GAAImE,GAAoB,EAAG,OAAO,EAElC,IAAMC,EAAUf,EAAKa,GACrB,IAAKE,EAAS,OAAO,EACrB,GAAKA,UAAAA,EAASH,SAAU,OAAO,EAE/B,IAAK,IAAI3D,EAAI6D,EAAmB,EAAG7D,GAAK,EAAGA,IACzC,GAAIiD,EAAWjD,KAAO4D,EAAO,CAC3B3E,EAAQgE,EAAWjD,IACnB,KACF,QAGK+C,EAAKa,IACZG,EAAAA,EAAAA,GAAgBd,EAAYW,GAE5BP,GAGF,CApKYW,CAASR,EAAWrE,GACtB,EACA,SAAUoD,GACRA,EAAMC,iBACR,EACJe,EAAezG,aAAa,YAAYmH,EAAAA,EAAAA,GAAgBT,EAAWG,UACrE,CAEA,SAAS5E,EAAWwE,EAA6BC,GAC/CD,EAAezG,aAAa,QAAQmH,EAAAA,EAAAA,GAAgBT,EAAWU,OAC/DX,EAAevE,QAAU,WACvBC,EAAQuE,EAAWrE,GACrB,CACF,MAEoBC,IAAhBqE,GACED,EAAW9E,OAAS+E,EAAY/E,MAClCF,EAAW+E,EAAgBC,GAEzBA,EAAW3E,OAAS4E,EAAY5E,MAClCF,EAAW4E,EAAgBC,GAEzBA,EAAWG,WAAaF,EAAYE,UAAYH,EAAWrE,KAAOsE,EAAYtE,IAChFuE,EAAYH,EAAgBC,GAE1BA,EAAWU,OAAST,EAAYS,MAAQV,EAAWrE,KAAOsE,EAAYtE,IACxEJ,EAAWwE,EAAgBC,KAG7BhF,EAAW+E,EAAgBC,GAC3B7E,EAAW4E,EAAgBC,GAC3BE,EAAYH,EAAgBC,GAC5BzE,EAAWwE,EAAgBC,GAE/B,CAEA,IAAMW,EAAc7E,MAAMC,MAAKC,EAAAA,EAAAA,IAAwBsD,EAAa,OAC9DsB,EAAoBD,EAAYzE,OAChC2E,EAoDD,WACL,IAAMC,EAAqB,GAC3B,IAAK,IAAM/C,KAAOwB,EAAM,CACtB,IAAMe,EAAUf,EAAKxB,GAErB+C,EAAOrE,KAAK,CACVsE,KAAMT,EAAQS,KACd1F,KAAMiF,EAAQjF,KACdH,KAAMoF,EAAQpF,KACd8F,SAAUV,EAAQU,SAClBb,SAAUG,EAAQH,SAClBO,KAAMJ,EAAQI,KACdO,WAAYX,EAAQW,WACpBC,KAAMZ,EAAQY,KACdvF,GAAI2E,EAAQ3E,IAEhB,CAIA,OAHAmF,EAAOK,KAAK,SAAUC,EAAGC,GACvB,OAAOD,EAAEF,KAAOG,EAAEH,IACpB,GACOJ,CACT,CAzEmBQ,GACXC,EAAiBV,EAAS3E,OAChC,GAAIqF,GAAkBX,EAAmB,CAEvC,IADA,IAAMtE,EAAW,IAAIC,iBACZC,EAAIoE,EAAmBpE,EAAI+E,EAAgB/E,IAAK,CACvD,IAAMmD,EAAgBD,IACtBpD,EAAS9B,YAAYmF,GACrBgB,EAAYlE,KAAKkD,EACnB,CACAL,EAAY5C,OAAOJ,EACrB,MACE,IAAK,IAAIK,EAAIiE,EAAoB,EAAGjE,GAAK4E,EAAgB5E,IACvDgE,EAAYhE,GAAGC,SAInB,IAAK,IAAIC,EAAI,EAAGA,EAAI0E,EAAgB1E,IAAK,CACvC,IAAMoD,EAAcT,EAAiB3C,GAC/BmD,EAAaa,EAAShE,GAE5BiD,EADuBa,EAAY9D,GACTmD,EAAYC,EACxC,CAEAT,EAAmBqB,CACrB,CAEO,SAASnF,EAAYqF,EAAmB1F,EAAmBH,EAAmB8F,EAA2Bb,EAA2Bc,GACzI,IAAKD,EACH,IAAK,IAAMjD,KAAOwB,EAAM,CAEtB,GADgBA,EAAKxB,GACTgD,OAASA,EACnB,OAAOhD,CAEX,CAGF,IAAMqC,GAAQoB,EAAAA,EAAAA,KACRC,EAAc,CAClBV,KAAMA,EACN1F,KAAMA,EACNH,KAAMA,EACN8F,SAAUA,EACVb,SAAUA,EACVO,MAAM,EACNO,WAAYA,EACZC,MAAM,IAAIQ,MAAOC,UACjBhG,GAAIyE,GAGN,OADAb,EAAKa,GAASqB,EACPrB,CACT,CAyBO,SAAS3E,EAAQ2E,GACtB,IAAMwB,EAAUrC,EAAKa,GACrB,GAAIwB,EAAS,CACX,IAAMvB,EAAmBZ,EAAWvD,OACpC,GAAImE,EAAmB,EAAG,CACxB,IAAMwB,EAAYpC,EAAWY,EAAmB,GAC1CL,EAAaT,EAAKsC,GACpB7B,IACFA,EAAWU,MAAO,EAClBkB,EAAQlB,MAAO,EACXmB,IAAczB,GAAOX,EAAWhD,KAAK2D,GACzCxC,EAASoC,EAAWe,MAAKrH,MAAzBkE,EAAQkE,EAAqB9B,EAAWiB,aACxC/D,EAAS0E,EAAQb,MAAKrH,MAAtBwD,EAAQ4E,EAAkBF,EAAQX,aAEtC,MACEW,EAAQlB,MAAO,EACfjB,EAAWhD,KAAK2D,GAChBlD,EAAS0E,EAAQb,MAAKrH,MAAtBwD,EAAQ4E,EAAkBF,EAAQX,aAQpC,OAJApB,IAGArB,EAAkBV,EAAiB8D,EAAQb,QACpC,CACT,CACA,OAAO,CACT,C,yHC9KAgB,OAAOvI,MAAQ,CACbwI,YAAU3C,E,+LAAA4C,CAAE,YAEK,cADMC,EAAAA,EAAAA,cAEbC,EAAAA,EAAAA,YACAC,EAAAA,EAAAA,MDoMV3G,EADkBC,EAAY,OAAQ,OAAQ,QAAQ,GAAO,EAAO,KChMpE,GAAC,WAPS,OAAA2D,EAAA3F,MAAA,KAAAC,UAAA,GAQV0I,mBAAoB,WAAa,GAGnC,SAAeN,OAAY,K,+CC+DpB,SAASO,EAAmBC,GACjC,QAAkB3G,IAAd2G,EAAyB,MAAO,GAEpC,GAAuB,WAAnBA,EAAUC,KACZ,MAAO,GAAGD,EAAUE,SAASF,EAAUG,OAGzC,GAAuB,WAAnBH,EAAUC,KACZ,OAAOD,EAAUI,OAGnB,GAAuB,UAAnBJ,EAAUC,KAAkB,CAE9B,IAAMI,EAAYC,EAAAA,EAAkBN,EAAUO,QAAUD,EAAAA,EAA2B,QAC7EE,EAAQR,EAAUS,WAAWC,IAAI,SAACC,GAAC,OAAKZ,EAAmBY,EAAE,GAAEC,KAAKP,GAC1E,MAAO,GAAGL,EAAUO,SAASC,IAC/B,CAEA,MAAO,EACT,C","sources":["webpack://value/./src/interface/icons/index.ts","webpack://value/./src/interface/pages/edit-symbol/index.ts","webpack://value/./src/interface/pages/edit-variable/index.ts","webpack://value/./src/interface/pages/home/symbols/index.ts","webpack://value/./src/interface/pages/home/index.ts","webpack://value/./src/interface/pages/search/index.ts","webpack://value/./src/interface/pages/settings/index.ts","webpack://value/./src/interface/pages/index.ts","webpack://value/./src/interface/tabs-bar/menu.ts","webpack://value/./src/interface/tabs-bar/tabs.ts","webpack://value/./src/index.ts","webpack://value/./src/lib/component/component.ts"],"sourcesContent":["import { MaterialSymbols } from './material-symbols-type';\n\nexport function getIconHTML(identifier: MaterialSymbols): string {\n  return /*html*/ `<span class=\"css_material_symbols_rounded\">${identifier}</span>`;\n}\n","import { documentQuerySelector, elementQuerySelector } from '../../../lib/selector/index';\nimport { getSymbol, setSymbolDescription, setSymbolName, Symbol } from '../../../lib/symbol/index';\n\nconst EditSymbolPage = documentQuerySelector('.css_edit_symbol_page');\nconst EditSymbolBodyElement = elementQuerySelector(EditSymbolPage, '.css_edit_symbol_body');\nconst NamePropertyElement = elementQuerySelector(EditSymbolBodyElement, '.css_edit_symbol_property[property=\"name\"]');\nconst NamePropertyInputElement = elementQuerySelector(NamePropertyElement, '.css_edit_symbol_property_content input[type=\"text\"]') as HTMLInputElement;\nconst DescriptionPropertyElement = elementQuerySelector(EditSymbolBodyElement, '.css_edit_symbol_property[property=\"description\"]');\nconst DescriptionPropertyTextareaElement = elementQuerySelector(DescriptionPropertyElement, '.css_edit_symbol_property_content textarea') as HTMLTextAreaElement;\n\nfunction updateEditSymbol(SymbolID: Symbol['id']): void {\n  const thisSymbol = getSymbol(SymbolID);\n  NamePropertyInputElement.value = thisSymbol.name;\n  DescriptionPropertyTextareaElement.value = thisSymbol.description;\n}\n\nexport function showEditSymbolPage(SymbolID: Symbol['id']): void {\n  EditSymbolPage.setAttribute('displayed', 'true');\n  updateEditSymbol(SymbolID);\n}\n\nexport async function hideEditSymbolPage(SymbolID: Symbol['id']) {\n  EditSymbolPage.setAttribute('displayed', 'false');\n  await setSymbolName(SymbolID, NamePropertyInputElement.value);\n  await setSymbolDescription(SymbolID, DescriptionPropertyTextareaElement.value);\n}\n","import { documentQuerySelector } from '../../../lib/selector/index';\nimport { Symbol } from '../../../lib/symbol/index';\n\nconst editSymbolPage = documentQuerySelector('.css_edit_variable_page');\n\nexport function showEditVariablePage(SymbolID: Symbol['id']): void {\n  editSymbolPage.setAttribute('displayed', 'true');\n}\n\nexport function hideEditVariablePage(): void {\n  editSymbolPage.setAttribute('displayed', 'false');\n}\n","import { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../../../lib/selector/index';\nimport { EvaluatedSymbol, listEvaluatedSymbols } from '../../../../lib/symbol/index';\nimport { getIconHTML } from '../../../icons/index';\nimport { openTab, registerTab } from '../../../tabs-bar/tabs';\n\nconst HomePage = documentQuerySelector('.css_home_page');\nconst HomePageBodyElement = elementQuerySelector(HomePage, '.css_home_page_body');\nconst HomePageSymbolsElement = elementQuerySelector(HomePageBodyElement, '.css_home_page_symbols');\n\nlet previousEvaluatedSymbolsList: Array<EvaluatedSymbol> = [];\n\nfunction generateSymbolElement(): HTMLElement {\n  const newSymbolElement = document.createElement('div');\n  newSymbolElement.classList.add('css_home_page_symbol');\n\n  const newIconElement = document.createElement('div');\n  newIconElement.classList.add('css_home_page_symbol_icon');\n  newSymbolElement.appendChild(newIconElement);\n\n  const newNameElement = document.createElement('div');\n  newNameElement.classList.add('css_home_page_symbol_name');\n  newSymbolElement.appendChild(newNameElement);\n\n  const newValueElement = document.createElement('div');\n  newValueElement.classList.add('css_home_page_symbol_value');\n  newSymbolElement.appendChild(newValueElement);\n\n  return newSymbolElement;\n}\n\nexport function updateHomePageSymbols(): void {\n  function updateHomePageSymbol(thisSymbolElement: HTMLElement, currentEvaluatedSymbol: EvaluatedSymbol, previousEvaluatedSymbol: EvaluatedSymbol | undefined): void {\n    function updateIcon(thisSymbolElement: HTMLElement, currentEvaluatedSymbol: EvaluatedSymbol) {\n      const iconElement = elementQuerySelector(thisSymbolElement, '.css_home_page_symbol_icon');\n      iconElement.innerHTML = getIconHTML(currentEvaluatedSymbol.icon);\n    }\n\n    function updateName(thisSymbolElement: HTMLElement, currentEvaluatedSymbol: EvaluatedSymbol) {\n      const nameElement = elementQuerySelector(thisSymbolElement, '.css_home_page_symbol_name');\n      nameElement.innerText = currentEvaluatedSymbol.name;\n    }\n\n    function updateValue(thisSymbolElement: HTMLElement, currentEvaluatedSymbol: EvaluatedSymbol) {\n      const valueElement = elementQuerySelector(thisSymbolElement, '.css_home_page_symbol_value');\n      valueElement.innerText = currentEvaluatedSymbol.value;\n    }\n\n    function updateOpen(thisSymbolElement: HTMLElement, currentEvaluatedSymbol: EvaluatedSymbol) {\n      thisSymbolElement.onclick = function () {\n        const TabID = registerTab('editSymbol', currentEvaluatedSymbol.name, 'edit', true, true, [currentEvaluatedSymbol.id]);\n        openTab(TabID);\n      };\n    }\n\n    if (previousEvaluatedSymbol !== undefined) {\n      if (currentEvaluatedSymbol.icon !== previousEvaluatedSymbol.icon) {\n        updateIcon(thisSymbolElement, currentEvaluatedSymbol);\n      }\n      if (currentEvaluatedSymbol.name !== previousEvaluatedSymbol.name) {\n        updateName(thisSymbolElement, currentEvaluatedSymbol);\n      }\n      if (currentEvaluatedSymbol.value !== previousEvaluatedSymbol.value) {\n        updateValue(thisSymbolElement, currentEvaluatedSymbol);\n      }\n      if (currentEvaluatedSymbol.id !== previousEvaluatedSymbol.id || currentEvaluatedSymbol.name !== previousEvaluatedSymbol.name) {\n        updateOpen(thisSymbolElement, currentEvaluatedSymbol);\n      }\n    } else {\n      updateIcon(thisSymbolElement, currentEvaluatedSymbol);\n      updateName(thisSymbolElement, currentEvaluatedSymbol);\n      updateValue(thisSymbolElement, currentEvaluatedSymbol);\n      updateOpen(thisSymbolElement, currentEvaluatedSymbol);\n    }\n  }\n\n  const symbolElements = Array.from(elementQuerySelectorAll(HomePageSymbolsElement, '.css_home_page_symbol'));\n  const symbolElementsLength = symbolElements.length;\n  const evaluatedSymbolsList = listEvaluatedSymbols();\n  const evaluatedSymbolsListLength = evaluatedSymbolsList.length;\n  if (evaluatedSymbolsListLength >= symbolElementsLength) {\n    const fragment = new DocumentFragment();\n    for (let i = symbolElementsLength; i < evaluatedSymbolsListLength; i++) {\n      const newSymbolElement = generateSymbolElement();\n      fragment.appendChild(newSymbolElement);\n      symbolElements.push(newSymbolElement);\n    }\n    HomePageSymbolsElement.append(fragment);\n  } else {\n    for (let j = symbolElementsLength - 1; j >= evaluatedSymbolsListLength; j--) {\n      symbolElements[j].remove();\n    }\n  }\n\n  for (let k = 0; k < evaluatedSymbolsListLength; k++) {\n    const previousEvaluatedSymbol = previousEvaluatedSymbolsList[k];\n    const currentEvaluatedSymbol = evaluatedSymbolsList[k];\n    const thisSymbolElement = symbolElements[k];\n    updateHomePageSymbol(thisSymbolElement, currentEvaluatedSymbol, previousEvaluatedSymbol);\n  }\n\n  previousEvaluatedSymbolsList = evaluatedSymbolsList;\n}\n","import { documentQuerySelector, elementQuerySelector } from '../../../lib/selector/index';\nimport { updateHomePageSymbols } from './symbols/index';\n\nconst HomePage = documentQuerySelector('.css_home_page');\nconst HomePageBodyElement = elementQuerySelector(HomePage, '.css_home_page_body');\n\nfunction updateHomePage(): void {\n  updateHomePageSymbols();\n}\n\nexport function showHomePage(): void {\n  HomePage.setAttribute('displayed', 'true');\n  updateHomePage();\n}\n\nexport function hideHomePage(): void {\n  HomePage.setAttribute('displayed', 'false');\n}\n","import { documentQuerySelector } from '../../../lib/selector/index';\n\nconst searchPage = documentQuerySelector('.css_search_page');\n\nexport function showSearchPage(): void {\n  searchPage.setAttribute('displayed', 'true');\n}\n\nexport function hideSearchPage(): void {\n  searchPage.setAttribute('displayed', 'false');\n}\n","import { documentQuerySelector } from '../../../lib/selector/index';\n\nconst settingsPage = documentQuerySelector('.css_settings_page');\n\nexport function showSettingsPage(): void {\n  settingsPage.setAttribute('displayed', 'true');\n}\n\nexport function hideSettingsPage(): void {\n  settingsPage.setAttribute('displayed', 'false');\n}\n","import { createSymbol } from '../../lib/symbol/index';\nimport { TabsBarMenuItemArray } from '../tabs-bar/menu';\nimport { openTab, registerTab } from '../tabs-bar/tabs';\nimport { hideEditSymbolPage, showEditSymbolPage } from './edit-symbol/index';\nimport { hideEditVariablePage, showEditVariablePage } from './edit-variable/index';\nimport { hideHomePage, showHomePage } from './home/index';\nimport { hideSearchPage, showSearchPage } from './search/index';\nimport { hideSettingsPage, showSettingsPage } from './settings/index';\n\nexport type HomePage = 'home';\nexport type SearchPage = 'search';\nexport type SettingsPage = 'settings';\nexport type EditSymbolPage = 'editSymbol';\nexport type EditVariablePage = 'editVariable';\nexport type Page = HomePage | SearchPage | SettingsPage | EditSymbolPage | EditVariablePage;\n\nexport const showPage: { [page: Page]: Function } = {\n  home: showHomePage,\n  search: showSearchPage,\n  settings: showSettingsPage,\n  editSymbol: showEditSymbolPage,\n  editVariable: showEditVariablePage\n};\n\nexport const hidePage: { [page: Page]: Function } = {\n  home: hideHomePage,\n  search: hideSearchPage,\n  settings: hideSettingsPage,\n  editSymbol: hideEditSymbolPage,\n  editVariable: hideEditVariablePage\n};\n\nexport const tabsBarMenuItems: { [page: Page]: TabsBarMenuItemArray } = {\n  home: [\n    {\n      key: 'home--new-symbol',\n      name: 'New Symbol',\n      icon: 'add',\n      action: async function () {\n        const SymbolID = await createSymbol();\n        const TabID = registerTab('editSymbol', 'New Symbol', 'edit', true, true, [SymbolID]);\n        // The tab name is same as the symbol's name\n        openTab(TabID);\n      }\n    },\n    {\n      key: 'home--search',\n      name: 'Search',\n      icon: 'search',\n      action: function () {\n        const TabID = registerTab('search', 'Search', 'search', false, true, []);\n        openTab(TabID);\n      }\n    },\n    {\n      key: 'home--settings',\n      name: 'Settings',\n      icon: 'settings',\n      action: function () {\n        const TabID = registerTab('settings', 'Settings', 'settings', false, true, []);\n        openTab(TabID);\n      }\n    }\n  ],\n  search: [],\n  settings: [],\n  editSymbol: [],\n  editVariable: []\n};\n","import { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../lib/selector/index';\nimport { getIconHTML } from '../icons/index';\nimport { MaterialSymbols } from '../icons/material-symbols-type';\n\nexport interface TabsBarMenuItem {\n  key: string;\n  icon: MaterialSymbols;\n  name: string;\n  action: Function;\n}\n\nexport type TabsBarMenuItemArray = Array<TabsBarMenuItem>;\n\nconst menuButtonElement = documentQuerySelector('.css_tabs_bar_menu_button');\nconst menuOverlayElement = documentQuerySelector('.css_tabs_bar_menu_overlay');\nconst menuElement = documentQuerySelector('.css_tabs_bar_menu');\n\nlet previousMenuItems: TabsBarMenuItemArray = [];\n\nfunction generateMenuItemElement(): HTMLElement {\n  const newMenuItemElement = document.createElement('div');\n  newMenuItemElement.classList.add('css_tabs_bar_menu_item');\n\n  const newIconElement = document.createElement('div');\n  newIconElement.classList.add('css_tabs_bar_menu_item_icon');\n  newMenuItemElement.appendChild(newIconElement);\n\n  const newNameElement = document.createElement('div');\n  newNameElement.classList.add('css_tabs_bar_menu_item_name');\n  newMenuItemElement.appendChild(newNameElement);\n\n  return newMenuItemElement;\n}\n\nexport function updateTabsBarMenu(menuItems: TabsBarMenuItemArray): void {\n  function updateTabsBarMenuItem(thisMenuItemElement: HTMLElement, currentMenuItem: TabsBarMenuItem, previousMenuItem: TabsBarMenuItem | undefined): void {\n    function updateIcon(thisMenuItemElement: HTMLElement, currentMenuItem: TabsBarMenuItem): void {\n      const iconElement = elementQuerySelector(thisMenuItemElement, '.css_tabs_bar_menu_item_icon');\n      iconElement.innerHTML = getIconHTML(currentMenuItem.icon);\n    }\n\n    function updateName(thisMenuItemElement: HTMLElement, currentMenuItem: TabsBarMenuItem): void {\n      const iconElement = elementQuerySelector(thisMenuItemElement, '.css_tabs_bar_menu_item_name');\n      iconElement.innerText = currentMenuItem.name;\n    }\n\n    function updateAction(thisMenuItemElement: HTMLElement, currentMenuItem: TabsBarMenuItem): void {\n      thisMenuItemElement.onclick = function (event) {\n        event.stopPropagation();\n        currentMenuItem.action();\n        closeTabsBarMenu();\n      };\n    }\n\n    if (previousMenuItem !== undefined) {\n      if (currentMenuItem.key !== previousMenuItem.key) {\n        updateIcon(thisMenuItemElement, currentMenuItem);\n        updateName(thisMenuItemElement, currentMenuItem);\n        updateAction(thisMenuItemElement, currentMenuItem);\n      }\n    } else {\n      updateIcon(thisMenuItemElement, currentMenuItem);\n      updateName(thisMenuItemElement, currentMenuItem);\n      updateAction(thisMenuItemElement, currentMenuItem);\n    }\n  }\n\n  const menuItemElements = Array.from(elementQuerySelectorAll(menuElement, '.css_tabs_bar_menu_item'));\n  const menuItemElementsLength = menuItemElements.length;\n  const menuItemsLength = menuItems.length;\n  if (menuItemsLength >= menuItemElementsLength) {\n    const fragment = new DocumentFragment();\n    for (let i = menuItemElementsLength; i < menuItemsLength; i++) {\n      const newMenuItemElement = generateMenuItemElement();\n      fragment.appendChild(newMenuItemElement);\n      menuItemElements.push(newMenuItemElement);\n    }\n    menuElement.append(fragment);\n  } else {\n    for (let j = menuItemElementsLength - 1; j >= menuItemsLength; j--) {\n      menuItemElements[j].remove();\n    }\n  }\n\n  for (let k = 0; k < menuItemsLength; k++) {\n    const previousMenuItem = previousMenuItems[k];\n    const currentMenuItem = menuItems[k];\n    const thisMenuItemElement = menuItemElements[k];\n    updateTabsBarMenuItem(thisMenuItemElement, currentMenuItem, previousMenuItem);\n  }\n\n  menuButtonElement.onclick = function () {\n    openTabsBarMenu();\n  };\n\n  menuOverlayElement.onclick = function (event) {\n    event.stopPropagation();\n    closeTabsBarMenu();\n  };\n\n  previousMenuItems = menuItems;\n}\n\nexport function openTabsBarMenu(): void {\n  menuElement.setAttribute('displayed', 'true');\n  menuOverlayElement.setAttribute('displayed', 'true');\n}\n\nexport function closeTabsBarMenu(): void {\n  menuElement.setAttribute('displayed', 'false');\n  menuOverlayElement.setAttribute('displayed', 'false');\n}\n","import { documentQuerySelector, elementQuerySelector, elementQuerySelectorAll } from '../../lib/selector/index';\nimport { booleanToString } from '../../lib/tools/boolean-to-string';\nimport { generateIdentifier } from '../../lib/tools/generate-identifier';\nimport { removeFromArray } from '../../lib/tools/remove-from-array';\nimport { getIconHTML } from '../icons/index';\nimport { MaterialSymbols } from '../icons/material-symbols-type';\nimport { hidePage, Page, showPage, tabsBarMenuItems } from '../pages/index';\nimport { updateTabsBarMenu } from './menu';\n\nexport interface Tab {\n  page: Page;\n  name: string;\n  icon: MaterialSymbols;\n  reusable: boolean;\n  closable: boolean;\n  open: boolean;\n  parameters: Array<any>;\n  time: number;\n  id: string;\n}\n\nconst tabsElement = documentQuerySelector('.css_tabs');\n\nconst Tabs: { [TabID: Tab['id']]: Tab } = {};\n\nlet previousTabsList: Array<Tab> = [];\nlet tabHistory: Array<Tab['id']> = [];\n\nfunction generateTabElement(): HTMLElement {\n  const newTabElement = document.createElement('div');\n  newTabElement.classList.add('css_tab');\n\n  const newIconElement = document.createElement('div');\n  newIconElement.classList.add('css_tab_icon');\n  newTabElement.appendChild(newIconElement);\n\n  const newNameElement = document.createElement('div');\n  newNameElement.classList.add('css_tab_name');\n  newTabElement.appendChild(newNameElement);\n\n  const newCloseElement = document.createElement('div');\n  newCloseElement.classList.add('css_tab_close');\n  newCloseElement.innerHTML = getIconHTML('close_small');\n  newTabElement.appendChild(newCloseElement);\n\n  return newTabElement;\n}\n\nfunction updateTabs(): void {\n  function updateTab(thisTabElement: HTMLElement, currentTab: Tab, previousTab: Tab | undefined): void {\n    function updateIcon(thisTabElement: HTMLElement, currentTab: Tab): void {\n      const iconElement = elementQuerySelector(thisTabElement, '.css_tab_icon');\n      iconElement.innerHTML = getIconHTML(currentTab.icon);\n    }\n\n    function updateName(thisTabElement: HTMLElement, currentTab: Tab): void {\n      const nameElement = elementQuerySelector(thisTabElement, '.css_tab_name');\n      nameElement.innerText = currentTab.name;\n    }\n\n    function updateClose(thisTabElement: HTMLElement, currentTab: Tab): void {\n      const closeElement = elementQuerySelector(thisTabElement, '.css_tab_close');\n      closeElement.onclick = currentTab.closable\n        ? function (event) {\n            event.stopPropagation();\n            closeTab(currentTab.id);\n          }\n        : function (event) {\n            event.stopPropagation();\n          };\n      thisTabElement.setAttribute('closable', booleanToString(currentTab.closable));\n    }\n\n    function updateOpen(thisTabElement: HTMLElement, currentTab: Tab): void {\n      thisTabElement.setAttribute('open', booleanToString(currentTab.open));\n      thisTabElement.onclick = function () {\n        openTab(currentTab.id);\n      };\n    }\n\n    if (previousTab !== undefined) {\n      if (currentTab.icon !== previousTab.icon) {\n        updateIcon(thisTabElement, currentTab);\n      }\n      if (currentTab.name !== previousTab.name) {\n        updateName(thisTabElement, currentTab);\n      }\n      if (currentTab.closable !== previousTab.closable || currentTab.id !== previousTab.id) {\n        updateClose(thisTabElement, currentTab);\n      }\n      if (currentTab.open !== previousTab.open || currentTab.id !== previousTab.id) {\n        updateOpen(thisTabElement, currentTab);\n      }\n    } else {\n      updateIcon(thisTabElement, currentTab);\n      updateName(thisTabElement, currentTab);\n      updateClose(thisTabElement, currentTab);\n      updateOpen(thisTabElement, currentTab);\n    }\n  }\n\n  const tabElements = Array.from(elementQuerySelectorAll(tabsElement, '.css_tab'));\n  const tabElementsLength = tabElements.length;\n  const TabsList = listTabs();\n  const TabsListLength = TabsList.length;\n  if (TabsListLength >= tabElementsLength) {\n    const fragment = new DocumentFragment();\n    for (let i = tabElementsLength; i < TabsListLength; i++) {\n      const newTabElement = generateTabElement();\n      fragment.appendChild(newTabElement);\n      tabElements.push(newTabElement);\n    }\n    tabsElement.append(fragment);\n  } else {\n    for (let j = tabElementsLength - 1; j >= TabsListLength; j--) {\n      tabElements[j].remove();\n    }\n  }\n\n  for (let k = 0; k < TabsListLength; k++) {\n    const previousTab = previousTabsList[k];\n    const currentTab = TabsList[k];\n    const thisTabElement = tabElements[k];\n    updateTab(thisTabElement, currentTab, previousTab);\n  }\n\n  previousTabsList = TabsList;\n}\n\nexport function registerTab(page: Tab['page'], name: Tab['name'], icon: Tab['icon'], reusable: Tab['reusable'], closable: Tab['closable'], parameters: Tab['parameters']): Tab['id'] {\n  if (!reusable) {\n    for (const key in Tabs) {\n      const thisTab = Tabs[key];\n      if (thisTab.page === page) {\n        return key;\n      }\n    }\n  }\n\n  const TabID = generateIdentifier();\n  const object: Tab = {\n    page: page,\n    name: name,\n    icon: icon,\n    reusable: reusable,\n    closable: closable,\n    open: false,\n    parameters: parameters,\n    time: new Date().getTime(),\n    id: TabID\n  };\n  Tabs[TabID] = object;\n  return TabID;\n}\n\nexport function listTabs(): Array<Tab> {\n  const result: Array<Tab> = [];\n  for (const key in Tabs) {\n    const thisTab = Tabs[key];\n    // clone the object to prevent previousTabsList from referencing mutated properties before UI updates\n    result.push({\n      page: thisTab.page,\n      name: thisTab.name,\n      icon: thisTab.icon,\n      reusable: thisTab.reusable,\n      closable: thisTab.closable,\n      open: thisTab.open,\n      parameters: thisTab.parameters,\n      time: thisTab.time,\n      id: thisTab.id\n    });\n  }\n  result.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  return result;\n}\n\nexport function openTab(TabID: Tab['id']): boolean {\n  const nextTab = Tabs[TabID];\n  if (nextTab) {\n    const tabHistoryLength = tabHistory.length;\n    if (tabHistoryLength > 0) {\n      const lastTabID = tabHistory[tabHistoryLength - 1];\n      const currentTab = Tabs[lastTabID];\n      if (currentTab) {\n        currentTab.open = false;\n        nextTab.open = true;\n        if (lastTabID !== TabID) tabHistory.push(TabID);\n        hidePage[currentTab.page](...currentTab.parameters);\n        showPage[nextTab.page](...nextTab.parameters);\n      }\n    } else {\n      nextTab.open = true;\n      tabHistory.push(TabID);\n      showPage[nextTab.page](...nextTab.parameters);\n    }\n\n    // update tabs\n    updateTabs();\n\n    // update menu button\n    updateTabsBarMenu(tabsBarMenuItems[nextTab.page]);\n    return true;\n  }\n  return false;\n}\n\nexport function closeTab(TabID: Tab['id']): boolean {\n  const tabHistoryLength = tabHistory.length;\n  if (tabHistoryLength <= 1) return false;\n\n  const thisTab = Tabs[TabID];\n  if (!thisTab) return false;\n  if (!thisTab?.closable) return false;\n\n  for (let i = tabHistoryLength - 1; i >= 0; i--) {\n    if (tabHistory[i] !== TabID) {\n      openTab(tabHistory[i]);\n      break;\n    }\n  }\n\n  delete Tabs[TabID];\n  removeFromArray(tabHistory, TabID);\n\n  updateTabs();\n\n  return true;\n}\n\nexport function initializeTabs(): void {\n  const homeTabID = registerTab('home', 'Home', 'home', false, false, []);\n  openTab(homeTabID);\n}\n","import { initializeSymbols } from './lib/symbol/index';\nimport { initializeVariables } from './lib/variable/index';\nimport { checkAppVersion } from './lib/version/index';\nimport { initializeTabs } from './interface/tabs-bar/tabs';\n\nimport './interface/theme.css';\n\nimport './interface/index.css';\n\nimport './interface/icons/index.css';\n\nimport './interface/tabs-bar/separator.css';\nimport './interface/tabs-bar/tabs.css';\nimport './interface/tabs-bar/tab.css';\nimport './interface/tabs-bar/menu.css';\n\nimport './interface/pages/home/page.css';\nimport './interface/pages/home/body.css';\nimport './interface/pages/home/symbols/index.css';\n\nimport './interface/pages/search/page.css';\n\nimport './interface/pages/settings/page.css';\n\nimport './interface/pages/edit-symbol/page.css';\nimport './interface/pages/edit-symbol/body.css';\nimport './interface/pages/edit-symbol/property.css';\nimport './interface/pages/edit-symbol/name.css';\nimport './interface/pages/edit-symbol/description.css';\n\nimport './interface/pages/edit-variable/page.css';\n\nwindow.value = {\n  initialize: async function () {\n    const status = await checkAppVersion();\n    if (status === 'ok') {\n      await initializeVariables();\n      await initializeSymbols();\n      initializeTabs();\n    }\n  },\n  secondlyInitialize: function () {}\n};\n\nexport default window.value;\n","import { isTopLevelModel } from '../tools/is-top-level-model';\nimport { splitByTopLevelDelimiter } from '../tools/split-by-top-level-delimiter';\nimport { stripTopLevelModel } from '../tools/strip-top-level-model';\nimport { delimeters, primaryDelimiters } from './delimeters';\n\nexport interface ModelComponent<T extends string> {\n  type: 'model';\n  model: T;\n  components: Array<Component>;\n}\n\nexport interface NumberComponent {\n  type: 'number';\n  number: number;\n  unit: string | '';\n}\n\nexport interface StringComponent {\n  type: 'string';\n  string: string;\n}\n\nexport type Component = NumberComponent | StringComponent | ModelComponent<string>;\n\nexport type ParsingFailed = undefined;\n\nexport function parseNumber(value: string): NumberComponent | ParsingFailed {\n  if (/^[-+]?[0-9]+$/.test(value)) {\n    // integer\n    return {\n      type: 'number',\n      number: parseInt(value, 10),\n      unit: ''\n    };\n  }\n\n  if (/^[-+]?[0-9]*\\.?[0-9]+$/.test(value)) {\n    // float\n    return {\n      type: 'number',\n      number: parseFloat(value),\n      unit: ''\n    };\n  }\n\n  const unitedIntegerMatch = value.match(/^([-+]?[0-9]+)([a-z%]+)$/i);\n  if (unitedIntegerMatch) {\n    // integer with unit\n    return {\n      type: 'number',\n      number: parseInt(unitedIntegerMatch[1], 10),\n      unit: unitedIntegerMatch[2].trim()\n    };\n  }\n\n  const unitedFloatMatch = value.match(/^([-+]?[0-9]*\\.?[0-9]+)([a-z%]+)$/i);\n  if (unitedFloatMatch) {\n    // float with unit\n    return {\n      type: 'number',\n      number: parseFloat(unitedFloatMatch[1]),\n      unit: unitedFloatMatch[2].trim()\n    };\n  }\n\n  return undefined;\n}\n\nexport function parseModel(value: string): ModelComponent<string> | ParsingFailed {\n  if (isTopLevelModel(value)) {\n    const strippedModel = stripTopLevelModel(value);\n    const legalDelimiters = delimeters[strippedModel.model] || delimeters['default'];\n    const array = splitByTopLevelDelimiter(strippedModel.result, legalDelimiters);\n\n    const parsedComponents = array.result.map((a) => parseComponent(a)).filter((b) => b !== undefined);\n\n    return {\n      type: 'model',\n      model: strippedModel.model,\n      components: parsedComponents\n    };\n  }\n\n  return undefined;\n}\n\nexport function parseComponent(value: string): Component | ParsingFailed {\n  const parsedNumberComponent = parseNumber(value);\n  if (parsedNumberComponent !== undefined) {\n    return parsedNumberComponent;\n  }\n\n  const parsedModelComponent = parseModel(value);\n  if (parsedModelComponent !== undefined) {\n    return parsedModelComponent;\n  }\n\n  if (value !== '') {\n    return {\n      type: 'string',\n      string: value\n    };\n  }\n\n  return undefined;\n}\n\nexport function stringifyComponent(component: Component | ParsingFailed): string {\n  if (component === undefined) return '';\n\n  if (component.type === 'number') {\n    return `${component.number}${component.unit}`;\n  }\n\n  if (component.type === 'string') {\n    return component.string;\n  }\n\n  if (component.type === 'model') {\n    // Join subcomponents with a delimiter (or use a white space by default)\n    const delimiter = primaryDelimiters[component.model] || primaryDelimiters['default'];\n    const inner = component.components.map((e) => stringifyComponent(e)).join(delimiter);\n    return `${component.model}(${inner})`;\n  }\n\n  return '';\n}\n"],"names":["getIconHTML","identifier","EditSymbolPage","documentQuerySelector","EditSymbolBodyElement","elementQuerySelector","NamePropertyElement","NamePropertyInputElement","DescriptionPropertyElement","DescriptionPropertyTextareaElement","_hideEditSymbolPage","SymbolID","setAttribute","setSymbolName","value","setSymbolDescription","apply","arguments","editSymbolPage","HomePage","HomePageBodyElement","HomePageSymbolsElement","previousEvaluatedSymbolsList","generateSymbolElement","newSymbolElement","document","createElement","classList","add","newIconElement","appendChild","newNameElement","newValueElement","updateHomePage","updateHomePageSymbol","thisSymbolElement","currentEvaluatedSymbol","previousEvaluatedSymbol","updateIcon","innerHTML","icon","updateName","innerText","name","updateValue","updateOpen","onclick","openTab","registerTab","id","undefined","symbolElements","Array","from","elementQuerySelectorAll","symbolElementsLength","length","evaluatedSymbolsList","listEvaluatedSymbols","evaluatedSymbolsListLength","fragment","DocumentFragment","i","push","append","j","remove","k","updateHomePageSymbols","searchPage","settingsPage","_action","showPage","home","search","settings","editSymbol","thisSymbol","getSymbol","description","updateEditSymbol","editVariable","hidePage","_x","tabsBarMenuItems","key","action","createSymbol","menuButtonElement","menuOverlayElement","menuElement","previousMenuItems","generateMenuItemElement","newMenuItemElement","updateTabsBarMenu","menuItems","updateTabsBarMenuItem","thisMenuItemElement","currentMenuItem","previousMenuItem","updateAction","event","stopPropagation","closeTabsBarMenu","menuItemElements","menuItemElementsLength","menuItemsLength","_initialize","tabsElement","Tabs","previousTabsList","tabHistory","generateTabElement","newTabElement","newCloseElement","updateTabs","updateTab","thisTabElement","currentTab","previousTab","updateClose","closable","TabID","tabHistoryLength","thisTab","removeFromArray","closeTab","booleanToString","open","tabElements","tabElementsLength","TabsList","result","page","reusable","parameters","time","sort","a","b","listTabs","TabsListLength","generateIdentifier","object","Date","getTime","nextTab","lastTabID","_toConsumableArray","window","initialize","_asyncToGenerator","checkAppVersion","initializeVariables","initializeSymbols","secondlyInitialize","stringifyComponent","component","type","number","unit","string","delimiter","primaryDelimiters","model","inner","components","map","e","join"],"sourceRoot":""}